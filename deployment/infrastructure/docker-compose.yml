# GoChat 基础设施部署配置
# 包含所有基础设施组件：etcd、kafka、mysql、redis 等
version: '3.8'

# 网络配置 - 分离不同类型的服务
networks:
  # 基础设施网络 - etcd、kafka、mysql、redis
  infra-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
  # 监控网络 - prometheus、grafana、管理界面
  monitoring-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.22.0.0/16

# 数据卷配置 - 确保数据持久化
volumes:
  # etcd 数据卷
  etcd-data-1:
    driver: local
  etcd-data-2:
    driver: local
  etcd-data-3:
    driver: local
  # kafka 数据卷
  kafka-data-1:
    driver: local
  kafka-data-2:
    driver: local
  kafka-data-3:
    driver: local
  # mysql 数据卷
  mysql-data:
    driver: local
  # redis 数据卷
  redis-data:
    driver: local
  # redis-insight 数据卷
  redis-insight-data:
    driver: local

services:
  # ===== etcd 集群 =====
  etcd1:
    image: 'bitnami/etcd:3.5'
    container_name: gochat-etcd1
    hostname: etcd1
    restart: unless-stopped
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_NAME=etcd1
      - ETCD_INITIAL_ADVERTISE_PEER_URLS=http://etcd1:2380
      - ETCD_LISTEN_PEER_URLS=http://0.0.0.0:2380
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd1:2379
      - ETCD_INITIAL_CLUSTER_TOKEN=gochat-etcd-cluster
      - ETCD_INITIAL_CLUSTER=etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380
      - ETCD_INITIAL_CLUSTER_STATE=new
      - ETCD_DATA_DIR=/etcd-data
      - ETCD_ENABLE_V2=true
    volumes:
      - etcd-data-1:/etcd-data
    ports:
      - "2379:2379"
      - "2380:2380"
    networks:
      - infra-net
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 10s
      retries: 3

  etcd2:
    image: 'bitnami/etcd:3.5'
    container_name: gochat-etcd2
    hostname: etcd2
    restart: unless-stopped
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_NAME=etcd2
      - ETCD_INITIAL_ADVERTISE_PEER_URLS=http://etcd2:2380
      - ETCD_LISTEN_PEER_URLS=http://0.0.0.0:2380
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd2:2379
      - ETCD_INITIAL_CLUSTER_TOKEN=gochat-etcd-cluster
      - ETCD_INITIAL_CLUSTER=etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380
      - ETCD_INITIAL_CLUSTER_STATE=new
      - ETCD_DATA_DIR=/etcd-data
      - ETCD_ENABLE_V2=true
    volumes:
      - etcd-data-2:/etcd-data
    ports:
      - "2389:2379"
      - "2390:2380"
    networks:
      - infra-net
    depends_on:
      - etcd1
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 10s
      retries: 3

  etcd3:
    image: 'bitnami/etcd:3.5'
    container_name: gochat-etcd3
    hostname: etcd3
    restart: unless-stopped
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_NAME=etcd3
      - ETCD_INITIAL_ADVERTISE_PEER_URLS=http://etcd3:2380
      - ETCD_LISTEN_PEER_URLS=http://0.0.0.0:2380
      - ETCD_LISTEN_CLIENT_URLS=http://0.0.0.0:2379
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd3:2379
      - ETCD_INITIAL_CLUSTER_TOKEN=gochat-etcd-cluster
      - ETCD_INITIAL_CLUSTER=etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380
      - ETCD_INITIAL_CLUSTER_STATE=new
      - ETCD_DATA_DIR=/etcd-data
      - ETCD_ENABLE_V2=true
    volumes:
      - etcd-data-3:/etcd-data
    ports:
      - "2399:2379"
      - "2400:2380"
    networks:
      - infra-net
    depends_on:
      - etcd1
      - etcd2
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ===== MySQL 数据库 =====
  mysql:
    image: mysql:8.0
    container_name: gochat-mysql
    hostname: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: gochat_root_2024
      MYSQL_DATABASE: gochat_dev
      MYSQL_USER: gochat
      MYSQL_PASSWORD: gochat_pass_2024
      MYSQL_CHARACTER_SET_SERVER: utf8mb4
      MYSQL_COLLATION_SERVER: utf8mb4_unicode_ci
    volumes:
      - mysql-data:/var/lib/mysql
      - ./init-scripts/mysql:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - infra-net
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --innodb-buffer-pool-size=256M
      --max-connections=200
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-pgochat_root_2024"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ===== Redis 缓存 =====
  redis:
    image: redis:7-alpine
    container_name: gochat-redis
    hostname: redis
    restart: unless-stopped
    volumes:
      - redis-data:/data
      - ./config/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
    networks:
      - infra-net
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ===== Kafka 集群 =====
  kafka1:
    image: apache/kafka:3.7.0
    container_name: gochat-kafka1
    hostname: kafka1
    restart: unless-stopped
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://kafka1:9092,CONTROLLER://kafka1:9093,EXTERNAL://0.0.0.0:19092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092,EXTERNAL://localhost:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka1:9093,2@kafka2:9093,3@kafka3:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      CLUSTER_ID: 'gochat-kafka-cluster-2024'
      KAFKA_LOG_DIRS: /var/lib/kafka/data
    volumes:
      - kafka-data-1:/var/lib/kafka/data
    ports:
      - "19092:19092"
    networks:
      - infra-net
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions.sh", "--bootstrap-server", "localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 3

  kafka2:
    image: apache/kafka:3.7.0
    container_name: gochat-kafka2
    hostname: kafka2
    restart: unless-stopped
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://kafka2:9092,CONTROLLER://kafka2:9093,EXTERNAL://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9092,EXTERNAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka1:9093,2@kafka2:9093,3@kafka3:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      CLUSTER_ID: 'gochat-kafka-cluster-2024'
      KAFKA_LOG_DIRS: /var/lib/kafka/data
    volumes:
      - kafka-data-2:/var/lib/kafka/data
    ports:
      - "29092:29092"
    networks:
      - infra-net
    depends_on:
      - kafka1
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions.sh", "--bootstrap-server", "localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 3

  kafka3:
    image: apache/kafka:3.7.0
    container_name: gochat-kafka3
    hostname: kafka3
    restart: unless-stopped
    environment:
      KAFKA_NODE_ID: 3
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://kafka3:9092,CONTROLLER://kafka3:9093,EXTERNAL://0.0.0.0:39092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9092,EXTERNAL://localhost:39092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka1:9093,2@kafka2:9093,3@kafka3:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 3
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 2
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_MIN_INSYNC_REPLICAS: 2
      CLUSTER_ID: 'gochat-kafka-cluster-2024'
      KAFKA_LOG_DIRS: /var/lib/kafka/data
    volumes:
      - kafka-data-3:/var/lib/kafka/data
    ports:
      - "39092:39092"
    networks:
      - infra-net
    depends_on:
      - kafka1
      - kafka2
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions.sh", "--bootstrap-server", "localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ===== 管理界面 =====
  # Kafka UI 管理界面
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: gochat-kafka-ui
    hostname: kafka-ui
    restart: unless-stopped
    environment:
      KAFKA_CLUSTERS_0_NAME: GoChat-Kafka-Cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:9092,kafka2:9092,kafka3:9092
      KAFKA_CLUSTERS_0_METRICS_PORT: 9997
      SERVER_SERVLET_CONTEXT_PATH: /kafka-ui
    ports:
      - "8080:8080"
    networks:
      - infra-net
      - monitoring-net
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/kafka-ui/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # etcd 管理界面
  etcd-manager:
    image: evildecay/etcdkeeper:latest
    container_name: gochat-etcd-manager
    hostname: etcd-manager
    restart: unless-stopped
    environment:
      - ETCD_HOSTS=etcd1:2379,etcd2:2379,etcd3:2379
    ports:
      - "8081:8080"
    networks:
      - infra-net
      - monitoring-net
    depends_on:
      - etcd1
      - etcd2
      - etcd3

  # Redis 管理界面 - RedisInsight
  redis-insight:
    image: redislabs/redisinsight:latest
    container_name: gochat-redis-insight
    hostname: redis-insight
    restart: unless-stopped
    environment:
      - RIPORT=8001
      - RIHOMEDIR=/db
    ports:
      - "8001:8001"
    networks:
      - infra-net
      - monitoring-net
    depends_on:
      - redis
    volumes:
      - redis-insight-data:/data
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8001/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # MySQL 管理界面 (phpMyAdmin)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: gochat-phpmyadmin
    hostname: phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: gochat_root_2024
      MYSQL_ROOT_PASSWORD: gochat_root_2024
    ports:
      - "8083:80"
    networks:
      - infra-net
      - monitoring-net
    depends_on:
      - mysql