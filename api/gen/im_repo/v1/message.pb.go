// im_repo/v1/message.proto
// 定义 im-repo 服务的消息数据相关接口

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: im_repo/v1/message.proto

package imrepov1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SaveMessageRequest 保存消息请求
type SaveMessageRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 消息 ID
	MessageId string `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	// 会话 ID
	ConversationId string `protobuf:"bytes,2,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	// 发送者 ID
	SenderId string `protobuf:"bytes,3,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	// 消息类型
	MessageType int32 `protobuf:"varint,4,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"`
	// 消息内容
	Content string `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	// 序列号。
	// [v1_simplify] 在当前简化版本中，调用方应确保此值与 message_id (如雪花ID) 相同，
	// 以此来保证消息的全局基本有序，从而避免了维护会话内严格递增序列的复杂性。
	SeqId int64 `protobuf:"varint,6,opt,name=seq_id,json=seqId,proto3" json:"seq_id,omitempty"`
	// 客户端消息 ID（用于幂等性）
	ClientMsgId string `protobuf:"bytes,7,opt,name=client_msg_id,json=clientMsgId,proto3" json:"client_msg_id,omitempty"`
	// 消息扩展信息
	Extra         string `protobuf:"bytes,8,opt,name=extra,proto3" json:"extra,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaveMessageRequest) Reset() {
	*x = SaveMessageRequest{}
	mi := &file_im_repo_v1_message_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveMessageRequest) ProtoMessage() {}

func (x *SaveMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_message_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveMessageRequest.ProtoReflect.Descriptor instead.
func (*SaveMessageRequest) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_message_proto_rawDescGZIP(), []int{0}
}

func (x *SaveMessageRequest) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *SaveMessageRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *SaveMessageRequest) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *SaveMessageRequest) GetMessageType() int32 {
	if x != nil {
		return x.MessageType
	}
	return 0
}

func (x *SaveMessageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SaveMessageRequest) GetSeqId() int64 {
	if x != nil {
		return x.SeqId
	}
	return 0
}

func (x *SaveMessageRequest) GetClientMsgId() string {
	if x != nil {
		return x.ClientMsgId
	}
	return ""
}

func (x *SaveMessageRequest) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

// SaveMessageResponse 保存消息响应
type SaveMessageResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 保存的消息信息
	Message       *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaveMessageResponse) Reset() {
	*x = SaveMessageResponse{}
	mi := &file_im_repo_v1_message_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveMessageResponse) ProtoMessage() {}

func (x *SaveMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_message_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveMessageResponse.ProtoReflect.Descriptor instead.
func (*SaveMessageResponse) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_message_proto_rawDescGZIP(), []int{1}
}

func (x *SaveMessageResponse) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

// GetMessageRequest 获取消息请求
type GetMessageRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 消息 ID
	MessageId     string `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMessageRequest) Reset() {
	*x = GetMessageRequest{}
	mi := &file_im_repo_v1_message_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessageRequest) ProtoMessage() {}

func (x *GetMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_message_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessageRequest.ProtoReflect.Descriptor instead.
func (*GetMessageRequest) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_message_proto_rawDescGZIP(), []int{2}
}

func (x *GetMessageRequest) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

// GetMessageResponse 获取消息响应
type GetMessageResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 消息信息
	Message       *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMessageResponse) Reset() {
	*x = GetMessageResponse{}
	mi := &file_im_repo_v1_message_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessageResponse) ProtoMessage() {}

func (x *GetMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_message_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessageResponse.ProtoReflect.Descriptor instead.
func (*GetMessageResponse) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_message_proto_rawDescGZIP(), []int{3}
}

func (x *GetMessageResponse) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

// GetConversationMessagesRequest 获取会话消息请求
type GetConversationMessagesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 会话 ID
	ConversationId string `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	// 起始序列号（可选）
	StartSeqId int64 `protobuf:"varint,2,opt,name=start_seq_id,json=startSeqId,proto3" json:"start_seq_id,omitempty"`
	// 结束序列号（可选）
	EndSeqId int64 `protobuf:"varint,3,opt,name=end_seq_id,json=endSeqId,proto3" json:"end_seq_id,omitempty"`
	// 限制数量
	Limit int32 `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	// 排序方向（true: 升序, false: 降序）
	Ascending     bool `protobuf:"varint,5,opt,name=ascending,proto3" json:"ascending,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConversationMessagesRequest) Reset() {
	*x = GetConversationMessagesRequest{}
	mi := &file_im_repo_v1_message_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationMessagesRequest) ProtoMessage() {}

func (x *GetConversationMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_message_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationMessagesRequest.ProtoReflect.Descriptor instead.
func (*GetConversationMessagesRequest) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_message_proto_rawDescGZIP(), []int{4}
}

func (x *GetConversationMessagesRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *GetConversationMessagesRequest) GetStartSeqId() int64 {
	if x != nil {
		return x.StartSeqId
	}
	return 0
}

func (x *GetConversationMessagesRequest) GetEndSeqId() int64 {
	if x != nil {
		return x.EndSeqId
	}
	return 0
}

func (x *GetConversationMessagesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetConversationMessagesRequest) GetAscending() bool {
	if x != nil {
		return x.Ascending
	}
	return false
}

// GetConversationMessagesResponse 获取会话消息响应
type GetConversationMessagesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 消息列表
	Messages []*Message `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	// 是否还有更多消息
	HasMore bool `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	// 下一页的起始序列号
	NextSeqId     int64 `protobuf:"varint,3,opt,name=next_seq_id,json=nextSeqId,proto3" json:"next_seq_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConversationMessagesResponse) Reset() {
	*x = GetConversationMessagesResponse{}
	mi := &file_im_repo_v1_message_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationMessagesResponse) ProtoMessage() {}

func (x *GetConversationMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_message_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationMessagesResponse.ProtoReflect.Descriptor instead.
func (*GetConversationMessagesResponse) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_message_proto_rawDescGZIP(), []int{5}
}

func (x *GetConversationMessagesResponse) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *GetConversationMessagesResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *GetConversationMessagesResponse) GetNextSeqId() int64 {
	if x != nil {
		return x.NextSeqId
	}
	return 0
}

// CheckMessageIdempotencyRequest 检查消息幂等性请求
type CheckMessageIdempotencyRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 客户端消息 ID
	ClientMsgId string `protobuf:"bytes,1,opt,name=client_msg_id,json=clientMsgId,proto3" json:"client_msg_id,omitempty"`
	// TTL 秒数（可选，默认 60 秒）
	TtlSeconds    int32 `protobuf:"varint,2,opt,name=ttl_seconds,json=ttlSeconds,proto3" json:"ttl_seconds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckMessageIdempotencyRequest) Reset() {
	*x = CheckMessageIdempotencyRequest{}
	mi := &file_im_repo_v1_message_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckMessageIdempotencyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckMessageIdempotencyRequest) ProtoMessage() {}

func (x *CheckMessageIdempotencyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_message_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckMessageIdempotencyRequest.ProtoReflect.Descriptor instead.
func (*CheckMessageIdempotencyRequest) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_message_proto_rawDescGZIP(), []int{6}
}

func (x *CheckMessageIdempotencyRequest) GetClientMsgId() string {
	if x != nil {
		return x.ClientMsgId
	}
	return ""
}

func (x *CheckMessageIdempotencyRequest) GetTtlSeconds() int32 {
	if x != nil {
		return x.TtlSeconds
	}
	return 0
}

// CheckMessageIdempotencyResponse 检查消息幂等性响应
type CheckMessageIdempotencyResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 是否已存在（true: 重复消息, false: 新消息）
	Exists bool `protobuf:"varint,1,opt,name=exists,proto3" json:"exists,omitempty"`
	// 已存在的消息 ID（如果存在）
	ExistingMessageId string `protobuf:"bytes,2,opt,name=existing_message_id,json=existingMessageId,proto3" json:"existing_message_id,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CheckMessageIdempotencyResponse) Reset() {
	*x = CheckMessageIdempotencyResponse{}
	mi := &file_im_repo_v1_message_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckMessageIdempotencyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckMessageIdempotencyResponse) ProtoMessage() {}

func (x *CheckMessageIdempotencyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_message_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckMessageIdempotencyResponse.ProtoReflect.Descriptor instead.
func (*CheckMessageIdempotencyResponse) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_message_proto_rawDescGZIP(), []int{7}
}

func (x *CheckMessageIdempotencyResponse) GetExists() bool {
	if x != nil {
		return x.Exists
	}
	return false
}

func (x *CheckMessageIdempotencyResponse) GetExistingMessageId() string {
	if x != nil {
		return x.ExistingMessageId
	}
	return ""
}

// GetLatestMessagesRequest 获取最新消息请求
type GetLatestMessagesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 会话 ID 列表
	ConversationIds []string `protobuf:"bytes,1,rep,name=conversation_ids,json=conversationIds,proto3" json:"conversation_ids,omitempty"`
	// 每个会话返回的消息数量（默认 1）
	LimitPerConversation int32 `protobuf:"varint,2,opt,name=limit_per_conversation,json=limitPerConversation,proto3" json:"limit_per_conversation,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GetLatestMessagesRequest) Reset() {
	*x = GetLatestMessagesRequest{}
	mi := &file_im_repo_v1_message_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLatestMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestMessagesRequest) ProtoMessage() {}

func (x *GetLatestMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_message_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestMessagesRequest.ProtoReflect.Descriptor instead.
func (*GetLatestMessagesRequest) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_message_proto_rawDescGZIP(), []int{8}
}

func (x *GetLatestMessagesRequest) GetConversationIds() []string {
	if x != nil {
		return x.ConversationIds
	}
	return nil
}

func (x *GetLatestMessagesRequest) GetLimitPerConversation() int32 {
	if x != nil {
		return x.LimitPerConversation
	}
	return 0
}

// GetLatestMessagesResponse 获取最新消息响应
type GetLatestMessagesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 会话最新消息映射 (conversation_id -> messages)
	ConversationMessages map[string]*ConversationMessages `protobuf:"bytes,1,rep,name=conversation_messages,json=conversationMessages,proto3" json:"conversation_messages,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GetLatestMessagesResponse) Reset() {
	*x = GetLatestMessagesResponse{}
	mi := &file_im_repo_v1_message_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLatestMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestMessagesResponse) ProtoMessage() {}

func (x *GetLatestMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_message_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestMessagesResponse.ProtoReflect.Descriptor instead.
func (*GetLatestMessagesResponse) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_message_proto_rawDescGZIP(), []int{9}
}

func (x *GetLatestMessagesResponse) GetConversationMessages() map[string]*ConversationMessages {
	if x != nil {
		return x.ConversationMessages
	}
	return nil
}

// ConversationMessages 会话消息列表
type ConversationMessages struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 消息列表
	Messages      []*Message `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConversationMessages) Reset() {
	*x = ConversationMessages{}
	mi := &file_im_repo_v1_message_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConversationMessages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationMessages) ProtoMessage() {}

func (x *ConversationMessages) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_message_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationMessages.ProtoReflect.Descriptor instead.
func (*ConversationMessages) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_message_proto_rawDescGZIP(), []int{10}
}

func (x *ConversationMessages) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

// DeleteMessageRequest 删除消息请求
type DeleteMessageRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 消息 ID
	MessageId string `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	// 操作者 ID
	OperatorId string `protobuf:"bytes,2,opt,name=operator_id,json=operatorId,proto3" json:"operator_id,omitempty"`
	// 删除原因（可选）
	Reason        string `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMessageRequest) Reset() {
	*x = DeleteMessageRequest{}
	mi := &file_im_repo_v1_message_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMessageRequest) ProtoMessage() {}

func (x *DeleteMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_message_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMessageRequest.ProtoReflect.Descriptor instead.
func (*DeleteMessageRequest) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_message_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteMessageRequest) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *DeleteMessageRequest) GetOperatorId() string {
	if x != nil {
		return x.OperatorId
	}
	return ""
}

func (x *DeleteMessageRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// DeleteMessageResponse 删除消息响应
type DeleteMessageResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 操作是否成功
	Success       bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteMessageResponse) Reset() {
	*x = DeleteMessageResponse{}
	mi := &file_im_repo_v1_message_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMessageResponse) ProtoMessage() {}

func (x *DeleteMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_message_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMessageResponse.ProtoReflect.Descriptor instead.
func (*DeleteMessageResponse) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_message_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteMessageResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Message 消息信息
type Message struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 消息 ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 会话 ID
	ConversationId string `protobuf:"bytes,2,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	// 发送者 ID
	SenderId string `protobuf:"bytes,3,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	// 消息类型
	MessageType int32 `protobuf:"varint,4,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"`
	// 消息内容
	Content string `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	// 会话内序列号
	SeqId int64 `protobuf:"varint,6,opt,name=seq_id,json=seqId,proto3" json:"seq_id,omitempty"`
	// 创建时间（Unix 时间戳）
	CreatedAt int64 `protobuf:"varint,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// 更新时间（Unix 时间戳）
	UpdatedAt int64 `protobuf:"varint,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// 是否已删除
	Deleted bool `protobuf:"varint,9,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// 消息扩展信息
	Extra         string `protobuf:"bytes,10,opt,name=extra,proto3" json:"extra,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_im_repo_v1_message_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_message_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_message_proto_rawDescGZIP(), []int{13}
}

func (x *Message) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Message) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *Message) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *Message) GetMessageType() int32 {
	if x != nil {
		return x.MessageType
	}
	return 0
}

func (x *Message) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Message) GetSeqId() int64 {
	if x != nil {
		return x.SeqId
	}
	return 0
}

func (x *Message) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Message) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Message) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

func (x *Message) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

var File_im_repo_v1_message_proto protoreflect.FileDescriptor

const file_im_repo_v1_message_proto_rawDesc = "" +
	"\n" +
	"\x18im_repo/v1/message.proto\x12\n" +
	"im.repo.v1\"\x87\x02\n" +
	"\x12SaveMessageRequest\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x12'\n" +
	"\x0fconversation_id\x18\x02 \x01(\tR\x0econversationId\x12\x1b\n" +
	"\tsender_id\x18\x03 \x01(\tR\bsenderId\x12!\n" +
	"\fmessage_type\x18\x04 \x01(\x05R\vmessageType\x12\x18\n" +
	"\acontent\x18\x05 \x01(\tR\acontent\x12\x15\n" +
	"\x06seq_id\x18\x06 \x01(\x03R\x05seqId\x12\"\n" +
	"\rclient_msg_id\x18\a \x01(\tR\vclientMsgId\x12\x14\n" +
	"\x05extra\x18\b \x01(\tR\x05extra\"D\n" +
	"\x13SaveMessageResponse\x12-\n" +
	"\amessage\x18\x01 \x01(\v2\x13.im.repo.v1.MessageR\amessage\"2\n" +
	"\x11GetMessageRequest\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\"C\n" +
	"\x12GetMessageResponse\x12-\n" +
	"\amessage\x18\x01 \x01(\v2\x13.im.repo.v1.MessageR\amessage\"\xbd\x01\n" +
	"\x1eGetConversationMessagesRequest\x12'\n" +
	"\x0fconversation_id\x18\x01 \x01(\tR\x0econversationId\x12 \n" +
	"\fstart_seq_id\x18\x02 \x01(\x03R\n" +
	"startSeqId\x12\x1c\n" +
	"\n" +
	"end_seq_id\x18\x03 \x01(\x03R\bendSeqId\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\x12\x1c\n" +
	"\tascending\x18\x05 \x01(\bR\tascending\"\x8d\x01\n" +
	"\x1fGetConversationMessagesResponse\x12/\n" +
	"\bmessages\x18\x01 \x03(\v2\x13.im.repo.v1.MessageR\bmessages\x12\x19\n" +
	"\bhas_more\x18\x02 \x01(\bR\ahasMore\x12\x1e\n" +
	"\vnext_seq_id\x18\x03 \x01(\x03R\tnextSeqId\"e\n" +
	"\x1eCheckMessageIdempotencyRequest\x12\"\n" +
	"\rclient_msg_id\x18\x01 \x01(\tR\vclientMsgId\x12\x1f\n" +
	"\vttl_seconds\x18\x02 \x01(\x05R\n" +
	"ttlSeconds\"i\n" +
	"\x1fCheckMessageIdempotencyResponse\x12\x16\n" +
	"\x06exists\x18\x01 \x01(\bR\x06exists\x12.\n" +
	"\x13existing_message_id\x18\x02 \x01(\tR\x11existingMessageId\"{\n" +
	"\x18GetLatestMessagesRequest\x12)\n" +
	"\x10conversation_ids\x18\x01 \x03(\tR\x0fconversationIds\x124\n" +
	"\x16limit_per_conversation\x18\x02 \x01(\x05R\x14limitPerConversation\"\xfc\x01\n" +
	"\x19GetLatestMessagesResponse\x12t\n" +
	"\x15conversation_messages\x18\x01 \x03(\v2?.im.repo.v1.GetLatestMessagesResponse.ConversationMessagesEntryR\x14conversationMessages\x1ai\n" +
	"\x19ConversationMessagesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x126\n" +
	"\x05value\x18\x02 \x01(\v2 .im.repo.v1.ConversationMessagesR\x05value:\x028\x01\"G\n" +
	"\x14ConversationMessages\x12/\n" +
	"\bmessages\x18\x01 \x03(\v2\x13.im.repo.v1.MessageR\bmessages\"n\n" +
	"\x14DeleteMessageRequest\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x12\x1f\n" +
	"\voperator_id\x18\x02 \x01(\tR\n" +
	"operatorId\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\"1\n" +
	"\x15DeleteMessageResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\xa1\x02\n" +
	"\aMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12'\n" +
	"\x0fconversation_id\x18\x02 \x01(\tR\x0econversationId\x12\x1b\n" +
	"\tsender_id\x18\x03 \x01(\tR\bsenderId\x12!\n" +
	"\fmessage_type\x18\x04 \x01(\x05R\vmessageType\x12\x18\n" +
	"\acontent\x18\x05 \x01(\tR\acontent\x12\x15\n" +
	"\x06seq_id\x18\x06 \x01(\x03R\x05seqId\x12\x1d\n" +
	"\n" +
	"created_at\x18\a \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\b \x01(\x03R\tupdatedAt\x12\x18\n" +
	"\adeleted\x18\t \x01(\bR\adeleted\x12\x14\n" +
	"\x05extra\x18\n" +
	" \x01(\tR\x05extra2\xcd\x04\n" +
	"\x0eMessageService\x12N\n" +
	"\vSaveMessage\x12\x1e.im.repo.v1.SaveMessageRequest\x1a\x1f.im.repo.v1.SaveMessageResponse\x12K\n" +
	"\n" +
	"GetMessage\x12\x1d.im.repo.v1.GetMessageRequest\x1a\x1e.im.repo.v1.GetMessageResponse\x12r\n" +
	"\x17GetConversationMessages\x12*.im.repo.v1.GetConversationMessagesRequest\x1a+.im.repo.v1.GetConversationMessagesResponse\x12r\n" +
	"\x17CheckMessageIdempotency\x12*.im.repo.v1.CheckMessageIdempotencyRequest\x1a+.im.repo.v1.CheckMessageIdempotencyResponse\x12`\n" +
	"\x11GetLatestMessages\x12$.im.repo.v1.GetLatestMessagesRequest\x1a%.im.repo.v1.GetLatestMessagesResponse\x12T\n" +
	"\rDeleteMessage\x12 .im.repo.v1.DeleteMessageRequest\x1a!.im.repo.v1.DeleteMessageResponseB7Z5github.com/ceyewan/gochat/api/gen/im_repo/v1;imrepov1b\x06proto3"

var (
	file_im_repo_v1_message_proto_rawDescOnce sync.Once
	file_im_repo_v1_message_proto_rawDescData []byte
)

func file_im_repo_v1_message_proto_rawDescGZIP() []byte {
	file_im_repo_v1_message_proto_rawDescOnce.Do(func() {
		file_im_repo_v1_message_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_im_repo_v1_message_proto_rawDesc), len(file_im_repo_v1_message_proto_rawDesc)))
	})
	return file_im_repo_v1_message_proto_rawDescData
}

var file_im_repo_v1_message_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_im_repo_v1_message_proto_goTypes = []any{
	(*SaveMessageRequest)(nil),              // 0: im.repo.v1.SaveMessageRequest
	(*SaveMessageResponse)(nil),             // 1: im.repo.v1.SaveMessageResponse
	(*GetMessageRequest)(nil),               // 2: im.repo.v1.GetMessageRequest
	(*GetMessageResponse)(nil),              // 3: im.repo.v1.GetMessageResponse
	(*GetConversationMessagesRequest)(nil),  // 4: im.repo.v1.GetConversationMessagesRequest
	(*GetConversationMessagesResponse)(nil), // 5: im.repo.v1.GetConversationMessagesResponse
	(*CheckMessageIdempotencyRequest)(nil),  // 6: im.repo.v1.CheckMessageIdempotencyRequest
	(*CheckMessageIdempotencyResponse)(nil), // 7: im.repo.v1.CheckMessageIdempotencyResponse
	(*GetLatestMessagesRequest)(nil),        // 8: im.repo.v1.GetLatestMessagesRequest
	(*GetLatestMessagesResponse)(nil),       // 9: im.repo.v1.GetLatestMessagesResponse
	(*ConversationMessages)(nil),            // 10: im.repo.v1.ConversationMessages
	(*DeleteMessageRequest)(nil),            // 11: im.repo.v1.DeleteMessageRequest
	(*DeleteMessageResponse)(nil),           // 12: im.repo.v1.DeleteMessageResponse
	(*Message)(nil),                         // 13: im.repo.v1.Message
	nil,                                     // 14: im.repo.v1.GetLatestMessagesResponse.ConversationMessagesEntry
}
var file_im_repo_v1_message_proto_depIdxs = []int32{
	13, // 0: im.repo.v1.SaveMessageResponse.message:type_name -> im.repo.v1.Message
	13, // 1: im.repo.v1.GetMessageResponse.message:type_name -> im.repo.v1.Message
	13, // 2: im.repo.v1.GetConversationMessagesResponse.messages:type_name -> im.repo.v1.Message
	14, // 3: im.repo.v1.GetLatestMessagesResponse.conversation_messages:type_name -> im.repo.v1.GetLatestMessagesResponse.ConversationMessagesEntry
	13, // 4: im.repo.v1.ConversationMessages.messages:type_name -> im.repo.v1.Message
	10, // 5: im.repo.v1.GetLatestMessagesResponse.ConversationMessagesEntry.value:type_name -> im.repo.v1.ConversationMessages
	0,  // 6: im.repo.v1.MessageService.SaveMessage:input_type -> im.repo.v1.SaveMessageRequest
	2,  // 7: im.repo.v1.MessageService.GetMessage:input_type -> im.repo.v1.GetMessageRequest
	4,  // 8: im.repo.v1.MessageService.GetConversationMessages:input_type -> im.repo.v1.GetConversationMessagesRequest
	6,  // 9: im.repo.v1.MessageService.CheckMessageIdempotency:input_type -> im.repo.v1.CheckMessageIdempotencyRequest
	8,  // 10: im.repo.v1.MessageService.GetLatestMessages:input_type -> im.repo.v1.GetLatestMessagesRequest
	11, // 11: im.repo.v1.MessageService.DeleteMessage:input_type -> im.repo.v1.DeleteMessageRequest
	1,  // 12: im.repo.v1.MessageService.SaveMessage:output_type -> im.repo.v1.SaveMessageResponse
	3,  // 13: im.repo.v1.MessageService.GetMessage:output_type -> im.repo.v1.GetMessageResponse
	5,  // 14: im.repo.v1.MessageService.GetConversationMessages:output_type -> im.repo.v1.GetConversationMessagesResponse
	7,  // 15: im.repo.v1.MessageService.CheckMessageIdempotency:output_type -> im.repo.v1.CheckMessageIdempotencyResponse
	9,  // 16: im.repo.v1.MessageService.GetLatestMessages:output_type -> im.repo.v1.GetLatestMessagesResponse
	12, // 17: im.repo.v1.MessageService.DeleteMessage:output_type -> im.repo.v1.DeleteMessageResponse
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_im_repo_v1_message_proto_init() }
func file_im_repo_v1_message_proto_init() {
	if File_im_repo_v1_message_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_im_repo_v1_message_proto_rawDesc), len(file_im_repo_v1_message_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_im_repo_v1_message_proto_goTypes,
		DependencyIndexes: file_im_repo_v1_message_proto_depIdxs,
		MessageInfos:      file_im_repo_v1_message_proto_msgTypes,
	}.Build()
	File_im_repo_v1_message_proto = out.File
	file_im_repo_v1_message_proto_goTypes = nil
	file_im_repo_v1_message_proto_depIdxs = nil
}
