// im_repo/v1/conversation.proto
// 定义 im-repo 服务的会话数据相关接口

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        v5.29.3
// source: im_repo/v1/conversation.proto

package repov1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetUserConversationsRequest 获取用户会话列表请求
type GetUserConversationsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 用户 ID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 偏移量
	Offset int32 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// 限制数量
	Limit int32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	// 会话类型过滤（可选）
	TypeFilter    int32 `protobuf:"varint,4,opt,name=type_filter,json=typeFilter,proto3" json:"type_filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserConversationsRequest) Reset() {
	*x = GetUserConversationsRequest{}
	mi := &file_im_repo_v1_conversation_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserConversationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserConversationsRequest) ProtoMessage() {}

func (x *GetUserConversationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_conversation_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserConversationsRequest.ProtoReflect.Descriptor instead.
func (*GetUserConversationsRequest) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_conversation_proto_rawDescGZIP(), []int{0}
}

func (x *GetUserConversationsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserConversationsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetUserConversationsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetUserConversationsRequest) GetTypeFilter() int32 {
	if x != nil {
		return x.TypeFilter
	}
	return 0
}

// GetUserConversationsResponse 获取用户会话列表响应
type GetUserConversationsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 会话 ID 列表
	ConversationIds []string `protobuf:"bytes,1,rep,name=conversation_ids,json=conversationIds,proto3" json:"conversation_ids,omitempty"`
	// 总数量
	Total int64 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	// 是否还有更多
	HasMore       bool `protobuf:"varint,3,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserConversationsResponse) Reset() {
	*x = GetUserConversationsResponse{}
	mi := &file_im_repo_v1_conversation_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserConversationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserConversationsResponse) ProtoMessage() {}

func (x *GetUserConversationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_conversation_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserConversationsResponse.ProtoReflect.Descriptor instead.
func (*GetUserConversationsResponse) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_conversation_proto_rawDescGZIP(), []int{1}
}

func (x *GetUserConversationsResponse) GetConversationIds() []string {
	if x != nil {
		return x.ConversationIds
	}
	return nil
}

func (x *GetUserConversationsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetUserConversationsResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

// UpdateReadPointerRequest 更新已读位置请求
type UpdateReadPointerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 用户 ID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 会话 ID
	ConversationId string `protobuf:"bytes,2,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	// 已读到的序列号
	SeqId         int64 `protobuf:"varint,3,opt,name=seq_id,json=seqId,proto3" json:"seq_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateReadPointerRequest) Reset() {
	*x = UpdateReadPointerRequest{}
	mi := &file_im_repo_v1_conversation_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateReadPointerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReadPointerRequest) ProtoMessage() {}

func (x *UpdateReadPointerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_conversation_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReadPointerRequest.ProtoReflect.Descriptor instead.
func (*UpdateReadPointerRequest) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_conversation_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateReadPointerRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateReadPointerRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *UpdateReadPointerRequest) GetSeqId() int64 {
	if x != nil {
		return x.SeqId
	}
	return 0
}

// UpdateReadPointerResponse 更新已读位置响应
type UpdateReadPointerResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 操作是否成功
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// 更新后的未读数量
	UnreadCount   int64 `protobuf:"varint,2,opt,name=unread_count,json=unreadCount,proto3" json:"unread_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateReadPointerResponse) Reset() {
	*x = UpdateReadPointerResponse{}
	mi := &file_im_repo_v1_conversation_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateReadPointerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReadPointerResponse) ProtoMessage() {}

func (x *UpdateReadPointerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_conversation_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReadPointerResponse.ProtoReflect.Descriptor instead.
func (*UpdateReadPointerResponse) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_conversation_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateReadPointerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateReadPointerResponse) GetUnreadCount() int64 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

// GetUnreadCountRequest 获取未读消息数请求
type GetUnreadCountRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 用户 ID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 会话 ID
	ConversationId string `protobuf:"bytes,2,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetUnreadCountRequest) Reset() {
	*x = GetUnreadCountRequest{}
	mi := &file_im_repo_v1_conversation_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUnreadCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnreadCountRequest) ProtoMessage() {}

func (x *GetUnreadCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_conversation_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnreadCountRequest.ProtoReflect.Descriptor instead.
func (*GetUnreadCountRequest) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_conversation_proto_rawDescGZIP(), []int{4}
}

func (x *GetUnreadCountRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUnreadCountRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

// GetUnreadCountResponse 获取未读消息数响应
type GetUnreadCountResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 未读消息数量
	UnreadCount   int64 `protobuf:"varint,1,opt,name=unread_count,json=unreadCount,proto3" json:"unread_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUnreadCountResponse) Reset() {
	*x = GetUnreadCountResponse{}
	mi := &file_im_repo_v1_conversation_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUnreadCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnreadCountResponse) ProtoMessage() {}

func (x *GetUnreadCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_conversation_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnreadCountResponse.ProtoReflect.Descriptor instead.
func (*GetUnreadCountResponse) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_conversation_proto_rawDescGZIP(), []int{5}
}

func (x *GetUnreadCountResponse) GetUnreadCount() int64 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

// GetReadPointerRequest 获取已读位置请求
type GetReadPointerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 用户 ID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 会话 ID
	ConversationId string `protobuf:"bytes,2,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetReadPointerRequest) Reset() {
	*x = GetReadPointerRequest{}
	mi := &file_im_repo_v1_conversation_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReadPointerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReadPointerRequest) ProtoMessage() {}

func (x *GetReadPointerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_conversation_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReadPointerRequest.ProtoReflect.Descriptor instead.
func (*GetReadPointerRequest) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_conversation_proto_rawDescGZIP(), []int{6}
}

func (x *GetReadPointerRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetReadPointerRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

// GetReadPointerResponse 获取已读位置响应
type GetReadPointerResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 已读位置信息
	ReadPointer   *ReadPointer `protobuf:"bytes,1,opt,name=read_pointer,json=readPointer,proto3" json:"read_pointer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReadPointerResponse) Reset() {
	*x = GetReadPointerResponse{}
	mi := &file_im_repo_v1_conversation_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReadPointerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReadPointerResponse) ProtoMessage() {}

func (x *GetReadPointerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_conversation_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReadPointerResponse.ProtoReflect.Descriptor instead.
func (*GetReadPointerResponse) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_conversation_proto_rawDescGZIP(), []int{7}
}

func (x *GetReadPointerResponse) GetReadPointer() *ReadPointer {
	if x != nil {
		return x.ReadPointer
	}
	return nil
}

// BatchGetUnreadCountsRequest 批量获取未读消息数请求
type BatchGetUnreadCountsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 用户 ID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 会话 ID 列表
	ConversationIds []string `protobuf:"bytes,2,rep,name=conversation_ids,json=conversationIds,proto3" json:"conversation_ids,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *BatchGetUnreadCountsRequest) Reset() {
	*x = BatchGetUnreadCountsRequest{}
	mi := &file_im_repo_v1_conversation_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGetUnreadCountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetUnreadCountsRequest) ProtoMessage() {}

func (x *BatchGetUnreadCountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_conversation_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetUnreadCountsRequest.ProtoReflect.Descriptor instead.
func (*BatchGetUnreadCountsRequest) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_conversation_proto_rawDescGZIP(), []int{8}
}

func (x *BatchGetUnreadCountsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *BatchGetUnreadCountsRequest) GetConversationIds() []string {
	if x != nil {
		return x.ConversationIds
	}
	return nil
}

// BatchGetUnreadCountsResponse 批量获取未读消息数响应
type BatchGetUnreadCountsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 未读数量映射 (conversation_id -> unread_count)
	UnreadCounts  map[string]int64 `protobuf:"bytes,1,rep,name=unread_counts,json=unreadCounts,proto3" json:"unread_counts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchGetUnreadCountsResponse) Reset() {
	*x = BatchGetUnreadCountsResponse{}
	mi := &file_im_repo_v1_conversation_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGetUnreadCountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetUnreadCountsResponse) ProtoMessage() {}

func (x *BatchGetUnreadCountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_conversation_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetUnreadCountsResponse.ProtoReflect.Descriptor instead.
func (*BatchGetUnreadCountsResponse) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_conversation_proto_rawDescGZIP(), []int{9}
}

func (x *BatchGetUnreadCountsResponse) GetUnreadCounts() map[string]int64 {
	if x != nil {
		return x.UnreadCounts
	}
	return nil
}

// ReadPointer 已读位置信息
type ReadPointer struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 用户 ID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 会话 ID
	ConversationId string `protobuf:"bytes,2,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	// 最后已读序列号
	LastReadSeqId int64 `protobuf:"varint,3,opt,name=last_read_seq_id,json=lastReadSeqId,proto3" json:"last_read_seq_id,omitempty"`
	// 更新时间（Unix 时间戳）
	UpdatedAt     int64 `protobuf:"varint,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadPointer) Reset() {
	*x = ReadPointer{}
	mi := &file_im_repo_v1_conversation_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadPointer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadPointer) ProtoMessage() {}

func (x *ReadPointer) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_conversation_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadPointer.ProtoReflect.Descriptor instead.
func (*ReadPointer) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_conversation_proto_rawDescGZIP(), []int{10}
}

func (x *ReadPointer) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ReadPointer) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *ReadPointer) GetLastReadSeqId() int64 {
	if x != nil {
		return x.LastReadSeqId
	}
	return 0
}

func (x *ReadPointer) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

var File_im_repo_v1_conversation_proto protoreflect.FileDescriptor

var file_im_repo_v1_conversation_proto_rawDesc = string([]byte{
	0x0a, 0x1d, 0x69, 0x6d, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0a, 0x69, 0x6d, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x76, 0x31, 0x22, 0x85, 0x01, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x79, 0x70, 0x65, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x22, 0x7a, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x63,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x22,
	0x73, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x64, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x15, 0x0a,
	0x06, 0x73, 0x65, 0x71, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73,
	0x65, 0x71, 0x49, 0x64, 0x22, 0x58, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x61, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x75,
	0x6e, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x59,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x75, 0x6e, 0x72, 0x65, 0x61,
	0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x59, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61,
	0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x54, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x72,
	0x65, 0x61, 0x64, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x69, 0x6d, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x61, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x64,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x22, 0x61, 0x0a, 0x1b, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x47, 0x65, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65,
	0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x22, 0xc0, 0x01, 0x0a, 0x1c, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x0d, 0x75,
	0x6e, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x69, 0x6d, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x55, 0x6e, 0x72,
	0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c,
	0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x1a, 0x3f, 0x0a, 0x11,
	0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x97, 0x01,
	0x0a, 0x0b, 0x52, 0x65, 0x61, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x27, 0x0a, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x73, 0x65, 0x71,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x52,
	0x65, 0x61, 0x64, 0x53, 0x65, 0x71, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x32, 0xff, 0x03, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x69, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27, 0x2e, 0x69, 0x6d, 0x2e, 0x72, 0x65, 0x70,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x28, 0x2e, 0x69, 0x6d, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x11, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x12,
	0x24, 0x2e, 0x69, 0x6d, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x69, 0x6d, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x61, 0x64, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21,
	0x2e, 0x69, 0x6d, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x69, 0x6d, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x69, 0x6d, 0x2e, 0x72, 0x65, 0x70,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x69, 0x6d, 0x2e,
	0x72, 0x65, 0x70, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69,
	0x0a, 0x14, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x27, 0x2e, 0x69, 0x6d, 0x2e, 0x72, 0x65, 0x70, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x72, 0x65,
	0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x28, 0x2e, 0x69, 0x6d, 0x2e, 0x72, 0x65, 0x70, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x47, 0x65, 0x74, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x63, 0x65, 0x79, 0x65, 0x77, 0x61, 0x6e, 0x2f,
	0x67, 0x6f, 0x63, 0x68, 0x61, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x69, 0x6d, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x2f, 0x76, 0x31, 0x3b, 0x72, 0x65, 0x70, 0x6f,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_im_repo_v1_conversation_proto_rawDescOnce sync.Once
	file_im_repo_v1_conversation_proto_rawDescData []byte
)

func file_im_repo_v1_conversation_proto_rawDescGZIP() []byte {
	file_im_repo_v1_conversation_proto_rawDescOnce.Do(func() {
		file_im_repo_v1_conversation_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_im_repo_v1_conversation_proto_rawDesc), len(file_im_repo_v1_conversation_proto_rawDesc)))
	})
	return file_im_repo_v1_conversation_proto_rawDescData
}

var file_im_repo_v1_conversation_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_im_repo_v1_conversation_proto_goTypes = []any{
	(*GetUserConversationsRequest)(nil),  // 0: im.repo.v1.GetUserConversationsRequest
	(*GetUserConversationsResponse)(nil), // 1: im.repo.v1.GetUserConversationsResponse
	(*UpdateReadPointerRequest)(nil),     // 2: im.repo.v1.UpdateReadPointerRequest
	(*UpdateReadPointerResponse)(nil),    // 3: im.repo.v1.UpdateReadPointerResponse
	(*GetUnreadCountRequest)(nil),        // 4: im.repo.v1.GetUnreadCountRequest
	(*GetUnreadCountResponse)(nil),       // 5: im.repo.v1.GetUnreadCountResponse
	(*GetReadPointerRequest)(nil),        // 6: im.repo.v1.GetReadPointerRequest
	(*GetReadPointerResponse)(nil),       // 7: im.repo.v1.GetReadPointerResponse
	(*BatchGetUnreadCountsRequest)(nil),  // 8: im.repo.v1.BatchGetUnreadCountsRequest
	(*BatchGetUnreadCountsResponse)(nil), // 9: im.repo.v1.BatchGetUnreadCountsResponse
	(*ReadPointer)(nil),                  // 10: im.repo.v1.ReadPointer
	nil,                                  // 11: im.repo.v1.BatchGetUnreadCountsResponse.UnreadCountsEntry
}
var file_im_repo_v1_conversation_proto_depIdxs = []int32{
	10, // 0: im.repo.v1.GetReadPointerResponse.read_pointer:type_name -> im.repo.v1.ReadPointer
	11, // 1: im.repo.v1.BatchGetUnreadCountsResponse.unread_counts:type_name -> im.repo.v1.BatchGetUnreadCountsResponse.UnreadCountsEntry
	0,  // 2: im.repo.v1.ConversationService.GetUserConversations:input_type -> im.repo.v1.GetUserConversationsRequest
	2,  // 3: im.repo.v1.ConversationService.UpdateReadPointer:input_type -> im.repo.v1.UpdateReadPointerRequest
	4,  // 4: im.repo.v1.ConversationService.GetUnreadCount:input_type -> im.repo.v1.GetUnreadCountRequest
	6,  // 5: im.repo.v1.ConversationService.GetReadPointer:input_type -> im.repo.v1.GetReadPointerRequest
	8,  // 6: im.repo.v1.ConversationService.BatchGetUnreadCounts:input_type -> im.repo.v1.BatchGetUnreadCountsRequest
	1,  // 7: im.repo.v1.ConversationService.GetUserConversations:output_type -> im.repo.v1.GetUserConversationsResponse
	3,  // 8: im.repo.v1.ConversationService.UpdateReadPointer:output_type -> im.repo.v1.UpdateReadPointerResponse
	5,  // 9: im.repo.v1.ConversationService.GetUnreadCount:output_type -> im.repo.v1.GetUnreadCountResponse
	7,  // 10: im.repo.v1.ConversationService.GetReadPointer:output_type -> im.repo.v1.GetReadPointerResponse
	9,  // 11: im.repo.v1.ConversationService.BatchGetUnreadCounts:output_type -> im.repo.v1.BatchGetUnreadCountsResponse
	7,  // [7:12] is the sub-list for method output_type
	2,  // [2:7] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_im_repo_v1_conversation_proto_init() }
func file_im_repo_v1_conversation_proto_init() {
	if File_im_repo_v1_conversation_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_im_repo_v1_conversation_proto_rawDesc), len(file_im_repo_v1_conversation_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_im_repo_v1_conversation_proto_goTypes,
		DependencyIndexes: file_im_repo_v1_conversation_proto_depIdxs,
		MessageInfos:      file_im_repo_v1_conversation_proto_msgTypes,
	}.Build()
	File_im_repo_v1_conversation_proto = out.File
	file_im_repo_v1_conversation_proto_goTypes = nil
	file_im_repo_v1_conversation_proto_depIdxs = nil
}
