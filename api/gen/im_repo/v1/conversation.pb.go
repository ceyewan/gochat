// im_repo/v1/conversation.proto
// 定义 im-repo 服务的会话数据相关接口

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: im_repo/v1/conversation.proto

package repov1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetUserConversationsRequest 获取用户会话列表请求
type GetUserConversationsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 用户 ID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 偏移量
	Offset int32 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// 限制数量
	Limit int32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	// 会话类型过滤（可选）
	TypeFilter    int32 `protobuf:"varint,4,opt,name=type_filter,json=typeFilter,proto3" json:"type_filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserConversationsRequest) Reset() {
	*x = GetUserConversationsRequest{}
	mi := &file_im_repo_v1_conversation_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserConversationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserConversationsRequest) ProtoMessage() {}

func (x *GetUserConversationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_conversation_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserConversationsRequest.ProtoReflect.Descriptor instead.
func (*GetUserConversationsRequest) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_conversation_proto_rawDescGZIP(), []int{0}
}

func (x *GetUserConversationsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUserConversationsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetUserConversationsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetUserConversationsRequest) GetTypeFilter() int32 {
	if x != nil {
		return x.TypeFilter
	}
	return 0
}

// GetUserConversationsResponse 获取用户会话列表响应
type GetUserConversationsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 会话 ID 列表
	ConversationIds []string `protobuf:"bytes,1,rep,name=conversation_ids,json=conversationIds,proto3" json:"conversation_ids,omitempty"`
	// 总数量
	Total int64 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	// 是否还有更多
	HasMore       bool `protobuf:"varint,3,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserConversationsResponse) Reset() {
	*x = GetUserConversationsResponse{}
	mi := &file_im_repo_v1_conversation_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserConversationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserConversationsResponse) ProtoMessage() {}

func (x *GetUserConversationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_conversation_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserConversationsResponse.ProtoReflect.Descriptor instead.
func (*GetUserConversationsResponse) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_conversation_proto_rawDescGZIP(), []int{1}
}

func (x *GetUserConversationsResponse) GetConversationIds() []string {
	if x != nil {
		return x.ConversationIds
	}
	return nil
}

func (x *GetUserConversationsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetUserConversationsResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

// UpdateReadPointerRequest 更新已读位置请求
type UpdateReadPointerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 用户 ID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 会话 ID
	ConversationId string `protobuf:"bytes,2,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	// 已读到的序列号
	SeqId         int64 `protobuf:"varint,3,opt,name=seq_id,json=seqId,proto3" json:"seq_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateReadPointerRequest) Reset() {
	*x = UpdateReadPointerRequest{}
	mi := &file_im_repo_v1_conversation_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateReadPointerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReadPointerRequest) ProtoMessage() {}

func (x *UpdateReadPointerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_conversation_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReadPointerRequest.ProtoReflect.Descriptor instead.
func (*UpdateReadPointerRequest) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_conversation_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateReadPointerRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateReadPointerRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *UpdateReadPointerRequest) GetSeqId() int64 {
	if x != nil {
		return x.SeqId
	}
	return 0
}

// UpdateReadPointerResponse 更新已读位置响应
type UpdateReadPointerResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 操作是否成功
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// 更新后的未读数量
	UnreadCount   int64 `protobuf:"varint,2,opt,name=unread_count,json=unreadCount,proto3" json:"unread_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateReadPointerResponse) Reset() {
	*x = UpdateReadPointerResponse{}
	mi := &file_im_repo_v1_conversation_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateReadPointerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReadPointerResponse) ProtoMessage() {}

func (x *UpdateReadPointerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_conversation_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReadPointerResponse.ProtoReflect.Descriptor instead.
func (*UpdateReadPointerResponse) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_conversation_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateReadPointerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateReadPointerResponse) GetUnreadCount() int64 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

// GetUnreadCountRequest 获取未读消息数请求
type GetUnreadCountRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 用户 ID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 会话 ID
	ConversationId string `protobuf:"bytes,2,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetUnreadCountRequest) Reset() {
	*x = GetUnreadCountRequest{}
	mi := &file_im_repo_v1_conversation_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUnreadCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnreadCountRequest) ProtoMessage() {}

func (x *GetUnreadCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_conversation_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnreadCountRequest.ProtoReflect.Descriptor instead.
func (*GetUnreadCountRequest) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_conversation_proto_rawDescGZIP(), []int{4}
}

func (x *GetUnreadCountRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUnreadCountRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

// GetUnreadCountResponse 获取未读消息数响应
type GetUnreadCountResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 未读消息数量
	UnreadCount   int64 `protobuf:"varint,1,opt,name=unread_count,json=unreadCount,proto3" json:"unread_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUnreadCountResponse) Reset() {
	*x = GetUnreadCountResponse{}
	mi := &file_im_repo_v1_conversation_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUnreadCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnreadCountResponse) ProtoMessage() {}

func (x *GetUnreadCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_conversation_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnreadCountResponse.ProtoReflect.Descriptor instead.
func (*GetUnreadCountResponse) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_conversation_proto_rawDescGZIP(), []int{5}
}

func (x *GetUnreadCountResponse) GetUnreadCount() int64 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

// GetReadPointerRequest 获取已读位置请求
type GetReadPointerRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 用户 ID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 会话 ID
	ConversationId string `protobuf:"bytes,2,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetReadPointerRequest) Reset() {
	*x = GetReadPointerRequest{}
	mi := &file_im_repo_v1_conversation_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReadPointerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReadPointerRequest) ProtoMessage() {}

func (x *GetReadPointerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_conversation_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReadPointerRequest.ProtoReflect.Descriptor instead.
func (*GetReadPointerRequest) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_conversation_proto_rawDescGZIP(), []int{6}
}

func (x *GetReadPointerRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetReadPointerRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

// GetReadPointerResponse 获取已读位置响应
type GetReadPointerResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 已读位置信息
	ReadPointer   *ReadPointer `protobuf:"bytes,1,opt,name=read_pointer,json=readPointer,proto3" json:"read_pointer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReadPointerResponse) Reset() {
	*x = GetReadPointerResponse{}
	mi := &file_im_repo_v1_conversation_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReadPointerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReadPointerResponse) ProtoMessage() {}

func (x *GetReadPointerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_conversation_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReadPointerResponse.ProtoReflect.Descriptor instead.
func (*GetReadPointerResponse) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_conversation_proto_rawDescGZIP(), []int{7}
}

func (x *GetReadPointerResponse) GetReadPointer() *ReadPointer {
	if x != nil {
		return x.ReadPointer
	}
	return nil
}

// BatchGetUnreadCountsRequest 批量获取未读消息数请求
type BatchGetUnreadCountsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 用户 ID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 会话 ID 列表
	ConversationIds []string `protobuf:"bytes,2,rep,name=conversation_ids,json=conversationIds,proto3" json:"conversation_ids,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *BatchGetUnreadCountsRequest) Reset() {
	*x = BatchGetUnreadCountsRequest{}
	mi := &file_im_repo_v1_conversation_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGetUnreadCountsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetUnreadCountsRequest) ProtoMessage() {}

func (x *BatchGetUnreadCountsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_conversation_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetUnreadCountsRequest.ProtoReflect.Descriptor instead.
func (*BatchGetUnreadCountsRequest) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_conversation_proto_rawDescGZIP(), []int{8}
}

func (x *BatchGetUnreadCountsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *BatchGetUnreadCountsRequest) GetConversationIds() []string {
	if x != nil {
		return x.ConversationIds
	}
	return nil
}

// BatchGetUnreadCountsResponse 批量获取未读消息数响应
type BatchGetUnreadCountsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 未读数量映射 (conversation_id -> unread_count)
	UnreadCounts  map[string]int64 `protobuf:"bytes,1,rep,name=unread_counts,json=unreadCounts,proto3" json:"unread_counts,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchGetUnreadCountsResponse) Reset() {
	*x = BatchGetUnreadCountsResponse{}
	mi := &file_im_repo_v1_conversation_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGetUnreadCountsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetUnreadCountsResponse) ProtoMessage() {}

func (x *BatchGetUnreadCountsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_conversation_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetUnreadCountsResponse.ProtoReflect.Descriptor instead.
func (*BatchGetUnreadCountsResponse) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_conversation_proto_rawDescGZIP(), []int{9}
}

func (x *BatchGetUnreadCountsResponse) GetUnreadCounts() map[string]int64 {
	if x != nil {
		return x.UnreadCounts
	}
	return nil
}

// ReadPointer 已读位置信息
type ReadPointer struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 用户 ID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 会话 ID
	ConversationId string `protobuf:"bytes,2,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	// 最后已读序列号
	LastReadSeqId int64 `protobuf:"varint,3,opt,name=last_read_seq_id,json=lastReadSeqId,proto3" json:"last_read_seq_id,omitempty"`
	// 更新时间（Unix 时间戳）
	UpdatedAt     int64 `protobuf:"varint,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadPointer) Reset() {
	*x = ReadPointer{}
	mi := &file_im_repo_v1_conversation_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadPointer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadPointer) ProtoMessage() {}

func (x *ReadPointer) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_conversation_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadPointer.ProtoReflect.Descriptor instead.
func (*ReadPointer) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_conversation_proto_rawDescGZIP(), []int{10}
}

func (x *ReadPointer) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ReadPointer) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *ReadPointer) GetLastReadSeqId() int64 {
	if x != nil {
		return x.LastReadSeqId
	}
	return 0
}

func (x *ReadPointer) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

// CreateConversationRequest 创建会话请求
type CreateConversationRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 会话类型
	Type int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	// 会话名称
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 会话头像 URL
	AvatarUrl string `protobuf:"bytes,3,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	// 会话描述
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	// 会话所有者 ID
	OwnerId string `protobuf:"bytes,5,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	// 成员用户 ID 列表
	MemberIds     []string `protobuf:"bytes,6,rep,name=member_ids,json=memberIds,proto3" json:"member_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateConversationRequest) Reset() {
	*x = CreateConversationRequest{}
	mi := &file_im_repo_v1_conversation_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateConversationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConversationRequest) ProtoMessage() {}

func (x *CreateConversationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_conversation_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConversationRequest.ProtoReflect.Descriptor instead.
func (*CreateConversationRequest) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_conversation_proto_rawDescGZIP(), []int{11}
}

func (x *CreateConversationRequest) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *CreateConversationRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateConversationRequest) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *CreateConversationRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateConversationRequest) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *CreateConversationRequest) GetMemberIds() []string {
	if x != nil {
		return x.MemberIds
	}
	return nil
}

// CreateConversationResponse 创建会话响应
type CreateConversationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 完整的会话信息
	Conversation  *Conversation `protobuf:"bytes,1,opt,name=conversation,proto3" json:"conversation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateConversationResponse) Reset() {
	*x = CreateConversationResponse{}
	mi := &file_im_repo_v1_conversation_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateConversationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConversationResponse) ProtoMessage() {}

func (x *CreateConversationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_conversation_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConversationResponse.ProtoReflect.Descriptor instead.
func (*CreateConversationResponse) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_conversation_proto_rawDescGZIP(), []int{12}
}

func (x *CreateConversationResponse) GetConversation() *Conversation {
	if x != nil {
		return x.Conversation
	}
	return nil
}

// Conversation 会话核心信息
// 定义了会话在 repo 层需要持久化的核心字段
type Conversation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 会话 ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 会话类型
	Type int32 `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	// 会话名称
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// 会话头像 URL
	AvatarUrl string `protobuf:"bytes,4,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	// 会话描述
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// 会话所有者 ID
	OwnerId string `protobuf:"bytes,6,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	// 成员数量
	MemberCount int32 `protobuf:"varint,7,opt,name=member_count,json=memberCount,proto3" json:"member_count,omitempty"`
	// 创建时间
	CreatedAt int64 `protobuf:"varint,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// 更新时间
	UpdatedAt     int64 `protobuf:"varint,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Conversation) Reset() {
	*x = Conversation{}
	mi := &file_im_repo_v1_conversation_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Conversation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conversation) ProtoMessage() {}

func (x *Conversation) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_conversation_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conversation.ProtoReflect.Descriptor instead.
func (*Conversation) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_conversation_proto_rawDescGZIP(), []int{13}
}

func (x *Conversation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Conversation) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *Conversation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Conversation) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *Conversation) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Conversation) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *Conversation) GetMemberCount() int32 {
	if x != nil {
		return x.MemberCount
	}
	return 0
}

func (x *Conversation) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Conversation) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

// BatchGetConversationsRequest 批量获取会话请求
type BatchGetConversationsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 会话 ID 列表
	ConversationIds []string `protobuf:"bytes,1,rep,name=conversation_ids,json=conversationIds,proto3" json:"conversation_ids,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *BatchGetConversationsRequest) Reset() {
	*x = BatchGetConversationsRequest{}
	mi := &file_im_repo_v1_conversation_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGetConversationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetConversationsRequest) ProtoMessage() {}

func (x *BatchGetConversationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_conversation_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetConversationsRequest.ProtoReflect.Descriptor instead.
func (*BatchGetConversationsRequest) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_conversation_proto_rawDescGZIP(), []int{14}
}

func (x *BatchGetConversationsRequest) GetConversationIds() []string {
	if x != nil {
		return x.ConversationIds
	}
	return nil
}

// BatchGetConversationsResponse 批量获取会话响应
type BatchGetConversationsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 会话信息列表
	Conversations []*Conversation `protobuf:"bytes,1,rep,name=conversations,proto3" json:"conversations,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchGetConversationsResponse) Reset() {
	*x = BatchGetConversationsResponse{}
	mi := &file_im_repo_v1_conversation_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchGetConversationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchGetConversationsResponse) ProtoMessage() {}

func (x *BatchGetConversationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_conversation_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchGetConversationsResponse.ProtoReflect.Descriptor instead.
func (*BatchGetConversationsResponse) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_conversation_proto_rawDescGZIP(), []int{15}
}

func (x *BatchGetConversationsResponse) GetConversations() []*Conversation {
	if x != nil {
		return x.Conversations
	}
	return nil
}

// ConversationMember 会话成员信息
type ConversationMember struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 会话 ID
	ConversationId string `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	// 用户 ID
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 成员角色 (例如: 1-普通成员, 2-管理员, 3-群主)
	Role int32 `protobuf:"varint,3,opt,name=role,proto3" json:"role,omitempty"`
	// 加入时间 (Unix 时间戳)
	JoinedAt      int64 `protobuf:"varint,4,opt,name=joined_at,json=joinedAt,proto3" json:"joined_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConversationMember) Reset() {
	*x = ConversationMember{}
	mi := &file_im_repo_v1_conversation_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConversationMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationMember) ProtoMessage() {}

func (x *ConversationMember) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_conversation_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationMember.ProtoReflect.Descriptor instead.
func (*ConversationMember) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_conversation_proto_rawDescGZIP(), []int{16}
}

func (x *ConversationMember) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *ConversationMember) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ConversationMember) GetRole() int32 {
	if x != nil {
		return x.Role
	}
	return 0
}

func (x *ConversationMember) GetJoinedAt() int64 {
	if x != nil {
		return x.JoinedAt
	}
	return 0
}

// AddConversationMemberRequest 添加会话成员请求
type AddConversationMemberRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 会话 ID
	ConversationId string `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	// 要添加的用户 ID 列表
	UserIds []string `protobuf:"bytes,2,rep,name=user_ids,json=userIds,proto3" json:"user_ids,omitempty"`
	// 成员角色
	Role          int32 `protobuf:"varint,3,opt,name=role,proto3" json:"role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddConversationMemberRequest) Reset() {
	*x = AddConversationMemberRequest{}
	mi := &file_im_repo_v1_conversation_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddConversationMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddConversationMemberRequest) ProtoMessage() {}

func (x *AddConversationMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_conversation_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddConversationMemberRequest.ProtoReflect.Descriptor instead.
func (*AddConversationMemberRequest) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_conversation_proto_rawDescGZIP(), []int{17}
}

func (x *AddConversationMemberRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *AddConversationMemberRequest) GetUserIds() []string {
	if x != nil {
		return x.UserIds
	}
	return nil
}

func (x *AddConversationMemberRequest) GetRole() int32 {
	if x != nil {
		return x.Role
	}
	return 0
}

// AddConversationMemberResponse 添加会话成员响应
type AddConversationMemberResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 操作是否成功
	Success       bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddConversationMemberResponse) Reset() {
	*x = AddConversationMemberResponse{}
	mi := &file_im_repo_v1_conversation_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddConversationMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddConversationMemberResponse) ProtoMessage() {}

func (x *AddConversationMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_conversation_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddConversationMemberResponse.ProtoReflect.Descriptor instead.
func (*AddConversationMemberResponse) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_conversation_proto_rawDescGZIP(), []int{18}
}

func (x *AddConversationMemberResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// RemoveConversationMemberRequest 移除会话成员请求
type RemoveConversationMemberRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 会话 ID
	ConversationId string `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	// 要移除的用户 ID
	UserId        string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveConversationMemberRequest) Reset() {
	*x = RemoveConversationMemberRequest{}
	mi := &file_im_repo_v1_conversation_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveConversationMemberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveConversationMemberRequest) ProtoMessage() {}

func (x *RemoveConversationMemberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_conversation_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveConversationMemberRequest.ProtoReflect.Descriptor instead.
func (*RemoveConversationMemberRequest) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_conversation_proto_rawDescGZIP(), []int{19}
}

func (x *RemoveConversationMemberRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *RemoveConversationMemberRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// RemoveConversationMemberResponse 移除会话成员响应
type RemoveConversationMemberResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 操作是否成功
	Success       bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveConversationMemberResponse) Reset() {
	*x = RemoveConversationMemberResponse{}
	mi := &file_im_repo_v1_conversation_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveConversationMemberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveConversationMemberResponse) ProtoMessage() {}

func (x *RemoveConversationMemberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_conversation_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveConversationMemberResponse.ProtoReflect.Descriptor instead.
func (*RemoveConversationMemberResponse) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_conversation_proto_rawDescGZIP(), []int{20}
}

func (x *RemoveConversationMemberResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// UpdateMemberRoleRequest 更新成员角色请求
type UpdateMemberRoleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 会话 ID
	ConversationId string `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	// 用户 ID
	UserId string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 新角色
	NewRole       int32 `protobuf:"varint,3,opt,name=new_role,json=newRole,proto3" json:"new_role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateMemberRoleRequest) Reset() {
	*x = UpdateMemberRoleRequest{}
	mi := &file_im_repo_v1_conversation_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMemberRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberRoleRequest) ProtoMessage() {}

func (x *UpdateMemberRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_conversation_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberRoleRequest.ProtoReflect.Descriptor instead.
func (*UpdateMemberRoleRequest) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_conversation_proto_rawDescGZIP(), []int{21}
}

func (x *UpdateMemberRoleRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *UpdateMemberRoleRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UpdateMemberRoleRequest) GetNewRole() int32 {
	if x != nil {
		return x.NewRole
	}
	return 0
}

// UpdateMemberRoleResponse 更新成员角色响应
type UpdateMemberRoleResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 操作是否成功
	Success       bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateMemberRoleResponse) Reset() {
	*x = UpdateMemberRoleResponse{}
	mi := &file_im_repo_v1_conversation_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateMemberRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMemberRoleResponse) ProtoMessage() {}

func (x *UpdateMemberRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_conversation_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMemberRoleResponse.ProtoReflect.Descriptor instead.
func (*UpdateMemberRoleResponse) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_conversation_proto_rawDescGZIP(), []int{22}
}

func (x *UpdateMemberRoleResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// GetConversationMembersRequest 获取会话成员请求
type GetConversationMembersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 会话 ID
	ConversationId string `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	// 偏移量
	Offset int32 `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	// 限制数量
	Limit int32 `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	// 角色过滤 (可选)
	RoleFilter    int32 `protobuf:"varint,4,opt,name=role_filter,json=roleFilter,proto3" json:"role_filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConversationMembersRequest) Reset() {
	*x = GetConversationMembersRequest{}
	mi := &file_im_repo_v1_conversation_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationMembersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationMembersRequest) ProtoMessage() {}

func (x *GetConversationMembersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_conversation_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationMembersRequest.ProtoReflect.Descriptor instead.
func (*GetConversationMembersRequest) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_conversation_proto_rawDescGZIP(), []int{23}
}

func (x *GetConversationMembersRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *GetConversationMembersRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetConversationMembersRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetConversationMembersRequest) GetRoleFilter() int32 {
	if x != nil {
		return x.RoleFilter
	}
	return 0
}

// GetConversationMembersResponse 获取会话成员响应
type GetConversationMembersResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 成员列表
	Members []*ConversationMember `protobuf:"bytes,1,rep,name=members,proto3" json:"members,omitempty"`
	// 总数量
	Total int64 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	// 是否还有更多
	HasMore       bool `protobuf:"varint,3,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConversationMembersResponse) Reset() {
	*x = GetConversationMembersResponse{}
	mi := &file_im_repo_v1_conversation_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationMembersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationMembersResponse) ProtoMessage() {}

func (x *GetConversationMembersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_im_repo_v1_conversation_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationMembersResponse.ProtoReflect.Descriptor instead.
func (*GetConversationMembersResponse) Descriptor() ([]byte, []int) {
	return file_im_repo_v1_conversation_proto_rawDescGZIP(), []int{24}
}

func (x *GetConversationMembersResponse) GetMembers() []*ConversationMember {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *GetConversationMembersResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetConversationMembersResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

var File_im_repo_v1_conversation_proto protoreflect.FileDescriptor

const file_im_repo_v1_conversation_proto_rawDesc = "" +
	"\n" +
	"\x1dim_repo/v1/conversation.proto\x12\n" +
	"im.repo.v1\"\x85\x01\n" +
	"\x1bGetUserConversationsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\x12\x1f\n" +
	"\vtype_filter\x18\x04 \x01(\x05R\n" +
	"typeFilter\"z\n" +
	"\x1cGetUserConversationsResponse\x12)\n" +
	"\x10conversation_ids\x18\x01 \x03(\tR\x0fconversationIds\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x03R\x05total\x12\x19\n" +
	"\bhas_more\x18\x03 \x01(\bR\ahasMore\"s\n" +
	"\x18UpdateReadPointerRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12'\n" +
	"\x0fconversation_id\x18\x02 \x01(\tR\x0econversationId\x12\x15\n" +
	"\x06seq_id\x18\x03 \x01(\x03R\x05seqId\"X\n" +
	"\x19UpdateReadPointerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12!\n" +
	"\funread_count\x18\x02 \x01(\x03R\vunreadCount\"Y\n" +
	"\x15GetUnreadCountRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12'\n" +
	"\x0fconversation_id\x18\x02 \x01(\tR\x0econversationId\";\n" +
	"\x16GetUnreadCountResponse\x12!\n" +
	"\funread_count\x18\x01 \x01(\x03R\vunreadCount\"Y\n" +
	"\x15GetReadPointerRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12'\n" +
	"\x0fconversation_id\x18\x02 \x01(\tR\x0econversationId\"T\n" +
	"\x16GetReadPointerResponse\x12:\n" +
	"\fread_pointer\x18\x01 \x01(\v2\x17.im.repo.v1.ReadPointerR\vreadPointer\"a\n" +
	"\x1bBatchGetUnreadCountsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12)\n" +
	"\x10conversation_ids\x18\x02 \x03(\tR\x0fconversationIds\"\xc0\x01\n" +
	"\x1cBatchGetUnreadCountsResponse\x12_\n" +
	"\runread_counts\x18\x01 \x03(\v2:.im.repo.v1.BatchGetUnreadCountsResponse.UnreadCountsEntryR\funreadCounts\x1a?\n" +
	"\x11UnreadCountsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\"\x97\x01\n" +
	"\vReadPointer\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12'\n" +
	"\x0fconversation_id\x18\x02 \x01(\tR\x0econversationId\x12'\n" +
	"\x10last_read_seq_id\x18\x03 \x01(\x03R\rlastReadSeqId\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x04 \x01(\x03R\tupdatedAt\"\xbe\x01\n" +
	"\x19CreateConversationRequest\x12\x12\n" +
	"\x04type\x18\x01 \x01(\x05R\x04type\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"avatar_url\x18\x03 \x01(\tR\tavatarUrl\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x19\n" +
	"\bowner_id\x18\x05 \x01(\tR\aownerId\x12\x1d\n" +
	"\n" +
	"member_ids\x18\x06 \x03(\tR\tmemberIds\"Z\n" +
	"\x1aCreateConversationResponse\x12<\n" +
	"\fconversation\x18\x01 \x01(\v2\x18.im.repo.v1.ConversationR\fconversation\"\x83\x02\n" +
	"\fConversation\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04type\x18\x02 \x01(\x05R\x04type\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"avatar_url\x18\x04 \x01(\tR\tavatarUrl\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12\x19\n" +
	"\bowner_id\x18\x06 \x01(\tR\aownerId\x12!\n" +
	"\fmember_count\x18\a \x01(\x05R\vmemberCount\x12\x1d\n" +
	"\n" +
	"created_at\x18\b \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\t \x01(\x03R\tupdatedAt\"I\n" +
	"\x1cBatchGetConversationsRequest\x12)\n" +
	"\x10conversation_ids\x18\x01 \x03(\tR\x0fconversationIds\"_\n" +
	"\x1dBatchGetConversationsResponse\x12>\n" +
	"\rconversations\x18\x01 \x03(\v2\x18.im.repo.v1.ConversationR\rconversations\"\x87\x01\n" +
	"\x12ConversationMember\x12'\n" +
	"\x0fconversation_id\x18\x01 \x01(\tR\x0econversationId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x12\n" +
	"\x04role\x18\x03 \x01(\x05R\x04role\x12\x1b\n" +
	"\tjoined_at\x18\x04 \x01(\x03R\bjoinedAt\"v\n" +
	"\x1cAddConversationMemberRequest\x12'\n" +
	"\x0fconversation_id\x18\x01 \x01(\tR\x0econversationId\x12\x19\n" +
	"\buser_ids\x18\x02 \x03(\tR\auserIds\x12\x12\n" +
	"\x04role\x18\x03 \x01(\x05R\x04role\"9\n" +
	"\x1dAddConversationMemberResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"c\n" +
	"\x1fRemoveConversationMemberRequest\x12'\n" +
	"\x0fconversation_id\x18\x01 \x01(\tR\x0econversationId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"<\n" +
	" RemoveConversationMemberResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"v\n" +
	"\x17UpdateMemberRoleRequest\x12'\n" +
	"\x0fconversation_id\x18\x01 \x01(\tR\x0econversationId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x19\n" +
	"\bnew_role\x18\x03 \x01(\x05R\anewRole\"4\n" +
	"\x18UpdateMemberRoleResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"\x97\x01\n" +
	"\x1dGetConversationMembersRequest\x12'\n" +
	"\x0fconversation_id\x18\x01 \x01(\tR\x0econversationId\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\x12\x1f\n" +
	"\vrole_filter\x18\x04 \x01(\x05R\n" +
	"roleFilter\"\x8b\x01\n" +
	"\x1eGetConversationMembersResponse\x128\n" +
	"\amembers\x18\x01 \x03(\v2\x1e.im.repo.v1.ConversationMemberR\amembers\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x03R\x05total\x12\x19\n" +
	"\bhas_more\x18\x03 \x01(\bR\ahasMore2\x87\t\n" +
	"\x13ConversationService\x12i\n" +
	"\x14GetUserConversations\x12'.im.repo.v1.GetUserConversationsRequest\x1a(.im.repo.v1.GetUserConversationsResponse\x12`\n" +
	"\x11UpdateReadPointer\x12$.im.repo.v1.UpdateReadPointerRequest\x1a%.im.repo.v1.UpdateReadPointerResponse\x12W\n" +
	"\x0eGetUnreadCount\x12!.im.repo.v1.GetUnreadCountRequest\x1a\".im.repo.v1.GetUnreadCountResponse\x12W\n" +
	"\x0eGetReadPointer\x12!.im.repo.v1.GetReadPointerRequest\x1a\".im.repo.v1.GetReadPointerResponse\x12i\n" +
	"\x14BatchGetUnreadCounts\x12'.im.repo.v1.BatchGetUnreadCountsRequest\x1a(.im.repo.v1.BatchGetUnreadCountsResponse\x12c\n" +
	"\x12CreateConversation\x12%.im.repo.v1.CreateConversationRequest\x1a&.im.repo.v1.CreateConversationResponse\x12l\n" +
	"\x15BatchGetConversations\x12(.im.repo.v1.BatchGetConversationsRequest\x1a).im.repo.v1.BatchGetConversationsResponse\x12l\n" +
	"\x15AddConversationMember\x12(.im.repo.v1.AddConversationMemberRequest\x1a).im.repo.v1.AddConversationMemberResponse\x12u\n" +
	"\x18RemoveConversationMember\x12+.im.repo.v1.RemoveConversationMemberRequest\x1a,.im.repo.v1.RemoveConversationMemberResponse\x12]\n" +
	"\x10UpdateMemberRole\x12#.im.repo.v1.UpdateMemberRoleRequest\x1a$.im.repo.v1.UpdateMemberRoleResponse\x12o\n" +
	"\x16GetConversationMembers\x12).im.repo.v1.GetConversationMembersRequest\x1a*.im.repo.v1.GetConversationMembersResponseB7Z5github.com/ceyewan/gochat/api/proto/im_repo/v1;repov1b\x06proto3"

var (
	file_im_repo_v1_conversation_proto_rawDescOnce sync.Once
	file_im_repo_v1_conversation_proto_rawDescData []byte
)

func file_im_repo_v1_conversation_proto_rawDescGZIP() []byte {
	file_im_repo_v1_conversation_proto_rawDescOnce.Do(func() {
		file_im_repo_v1_conversation_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_im_repo_v1_conversation_proto_rawDesc), len(file_im_repo_v1_conversation_proto_rawDesc)))
	})
	return file_im_repo_v1_conversation_proto_rawDescData
}

var file_im_repo_v1_conversation_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_im_repo_v1_conversation_proto_goTypes = []any{
	(*GetUserConversationsRequest)(nil),      // 0: im.repo.v1.GetUserConversationsRequest
	(*GetUserConversationsResponse)(nil),     // 1: im.repo.v1.GetUserConversationsResponse
	(*UpdateReadPointerRequest)(nil),         // 2: im.repo.v1.UpdateReadPointerRequest
	(*UpdateReadPointerResponse)(nil),        // 3: im.repo.v1.UpdateReadPointerResponse
	(*GetUnreadCountRequest)(nil),            // 4: im.repo.v1.GetUnreadCountRequest
	(*GetUnreadCountResponse)(nil),           // 5: im.repo.v1.GetUnreadCountResponse
	(*GetReadPointerRequest)(nil),            // 6: im.repo.v1.GetReadPointerRequest
	(*GetReadPointerResponse)(nil),           // 7: im.repo.v1.GetReadPointerResponse
	(*BatchGetUnreadCountsRequest)(nil),      // 8: im.repo.v1.BatchGetUnreadCountsRequest
	(*BatchGetUnreadCountsResponse)(nil),     // 9: im.repo.v1.BatchGetUnreadCountsResponse
	(*ReadPointer)(nil),                      // 10: im.repo.v1.ReadPointer
	(*CreateConversationRequest)(nil),        // 11: im.repo.v1.CreateConversationRequest
	(*CreateConversationResponse)(nil),       // 12: im.repo.v1.CreateConversationResponse
	(*Conversation)(nil),                     // 13: im.repo.v1.Conversation
	(*BatchGetConversationsRequest)(nil),     // 14: im.repo.v1.BatchGetConversationsRequest
	(*BatchGetConversationsResponse)(nil),    // 15: im.repo.v1.BatchGetConversationsResponse
	(*ConversationMember)(nil),               // 16: im.repo.v1.ConversationMember
	(*AddConversationMemberRequest)(nil),     // 17: im.repo.v1.AddConversationMemberRequest
	(*AddConversationMemberResponse)(nil),    // 18: im.repo.v1.AddConversationMemberResponse
	(*RemoveConversationMemberRequest)(nil),  // 19: im.repo.v1.RemoveConversationMemberRequest
	(*RemoveConversationMemberResponse)(nil), // 20: im.repo.v1.RemoveConversationMemberResponse
	(*UpdateMemberRoleRequest)(nil),          // 21: im.repo.v1.UpdateMemberRoleRequest
	(*UpdateMemberRoleResponse)(nil),         // 22: im.repo.v1.UpdateMemberRoleResponse
	(*GetConversationMembersRequest)(nil),    // 23: im.repo.v1.GetConversationMembersRequest
	(*GetConversationMembersResponse)(nil),   // 24: im.repo.v1.GetConversationMembersResponse
	nil,                                      // 25: im.repo.v1.BatchGetUnreadCountsResponse.UnreadCountsEntry
}
var file_im_repo_v1_conversation_proto_depIdxs = []int32{
	10, // 0: im.repo.v1.GetReadPointerResponse.read_pointer:type_name -> im.repo.v1.ReadPointer
	25, // 1: im.repo.v1.BatchGetUnreadCountsResponse.unread_counts:type_name -> im.repo.v1.BatchGetUnreadCountsResponse.UnreadCountsEntry
	13, // 2: im.repo.v1.CreateConversationResponse.conversation:type_name -> im.repo.v1.Conversation
	13, // 3: im.repo.v1.BatchGetConversationsResponse.conversations:type_name -> im.repo.v1.Conversation
	16, // 4: im.repo.v1.GetConversationMembersResponse.members:type_name -> im.repo.v1.ConversationMember
	0,  // 5: im.repo.v1.ConversationService.GetUserConversations:input_type -> im.repo.v1.GetUserConversationsRequest
	2,  // 6: im.repo.v1.ConversationService.UpdateReadPointer:input_type -> im.repo.v1.UpdateReadPointerRequest
	4,  // 7: im.repo.v1.ConversationService.GetUnreadCount:input_type -> im.repo.v1.GetUnreadCountRequest
	6,  // 8: im.repo.v1.ConversationService.GetReadPointer:input_type -> im.repo.v1.GetReadPointerRequest
	8,  // 9: im.repo.v1.ConversationService.BatchGetUnreadCounts:input_type -> im.repo.v1.BatchGetUnreadCountsRequest
	11, // 10: im.repo.v1.ConversationService.CreateConversation:input_type -> im.repo.v1.CreateConversationRequest
	14, // 11: im.repo.v1.ConversationService.BatchGetConversations:input_type -> im.repo.v1.BatchGetConversationsRequest
	17, // 12: im.repo.v1.ConversationService.AddConversationMember:input_type -> im.repo.v1.AddConversationMemberRequest
	19, // 13: im.repo.v1.ConversationService.RemoveConversationMember:input_type -> im.repo.v1.RemoveConversationMemberRequest
	21, // 14: im.repo.v1.ConversationService.UpdateMemberRole:input_type -> im.repo.v1.UpdateMemberRoleRequest
	23, // 15: im.repo.v1.ConversationService.GetConversationMembers:input_type -> im.repo.v1.GetConversationMembersRequest
	1,  // 16: im.repo.v1.ConversationService.GetUserConversations:output_type -> im.repo.v1.GetUserConversationsResponse
	3,  // 17: im.repo.v1.ConversationService.UpdateReadPointer:output_type -> im.repo.v1.UpdateReadPointerResponse
	5,  // 18: im.repo.v1.ConversationService.GetUnreadCount:output_type -> im.repo.v1.GetUnreadCountResponse
	7,  // 19: im.repo.v1.ConversationService.GetReadPointer:output_type -> im.repo.v1.GetReadPointerResponse
	9,  // 20: im.repo.v1.ConversationService.BatchGetUnreadCounts:output_type -> im.repo.v1.BatchGetUnreadCountsResponse
	12, // 21: im.repo.v1.ConversationService.CreateConversation:output_type -> im.repo.v1.CreateConversationResponse
	15, // 22: im.repo.v1.ConversationService.BatchGetConversations:output_type -> im.repo.v1.BatchGetConversationsResponse
	18, // 23: im.repo.v1.ConversationService.AddConversationMember:output_type -> im.repo.v1.AddConversationMemberResponse
	20, // 24: im.repo.v1.ConversationService.RemoveConversationMember:output_type -> im.repo.v1.RemoveConversationMemberResponse
	22, // 25: im.repo.v1.ConversationService.UpdateMemberRole:output_type -> im.repo.v1.UpdateMemberRoleResponse
	24, // 26: im.repo.v1.ConversationService.GetConversationMembers:output_type -> im.repo.v1.GetConversationMembersResponse
	16, // [16:27] is the sub-list for method output_type
	5,  // [5:16] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_im_repo_v1_conversation_proto_init() }
func file_im_repo_v1_conversation_proto_init() {
	if File_im_repo_v1_conversation_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_im_repo_v1_conversation_proto_rawDesc), len(file_im_repo_v1_conversation_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_im_repo_v1_conversation_proto_goTypes,
		DependencyIndexes: file_im_repo_v1_conversation_proto_depIdxs,
		MessageInfos:      file_im_repo_v1_conversation_proto_msgTypes,
	}.Build()
	File_im_repo_v1_conversation_proto = out.File
	file_im_repo_v1_conversation_proto_goTypes = nil
	file_im_repo_v1_conversation_proto_depIdxs = nil
}
