// im_logic/v1/message.proto
// Defines the message management service for im-logic.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        (unknown)
// source: im_logic/v1/message.proto

package logicv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SendMessageRequest is the request to send a message.
type SendMessageRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the user sending the message.
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// The ID of the conversation to send the message to.
	ConversationId string `protobuf:"bytes,2,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	// The content of the message.
	Content string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	// The type of the message.
	Type MessageType `protobuf:"varint,4,opt,name=type,proto3,enum=im.logic.v1.MessageType" json:"type,omitempty"`
	// A temporary client-side ID for idempotency.
	ClientMsgId   string `protobuf:"bytes,5,opt,name=client_msg_id,json=clientMsgId,proto3" json:"client_msg_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMessageRequest) Reset() {
	*x = SendMessageRequest{}
	mi := &file_im_logic_v1_message_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageRequest) ProtoMessage() {}

func (x *SendMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_im_logic_v1_message_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageRequest.ProtoReflect.Descriptor instead.
func (*SendMessageRequest) Descriptor() ([]byte, []int) {
	return file_im_logic_v1_message_proto_rawDescGZIP(), []int{0}
}

func (x *SendMessageRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *SendMessageRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *SendMessageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SendMessageRequest) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_MESSAGE_TYPE_UNSPECIFIED
}

func (x *SendMessageRequest) GetClientMsgId() string {
	if x != nil {
		return x.ClientMsgId
	}
	return ""
}

// SendMessageResponse is the response after sending a message.
type SendMessageResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The server-generated message.
	Message *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// The temporary client-side ID for matching.
	ClientMsgId   string `protobuf:"bytes,2,opt,name=client_msg_id,json=clientMsgId,proto3" json:"client_msg_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendMessageResponse) Reset() {
	*x = SendMessageResponse{}
	mi := &file_im_logic_v1_message_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageResponse) ProtoMessage() {}

func (x *SendMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_im_logic_v1_message_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageResponse.ProtoReflect.Descriptor instead.
func (*SendMessageResponse) Descriptor() ([]byte, []int) {
	return file_im_logic_v1_message_proto_rawDescGZIP(), []int{1}
}

func (x *SendMessageResponse) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *SendMessageResponse) GetClientMsgId() string {
	if x != nil {
		return x.ClientMsgId
	}
	return ""
}

var File_im_logic_v1_message_proto protoreflect.FileDescriptor

const file_im_logic_v1_message_proto_rawDesc = "" +
	"\n" +
	"\x19im_logic/v1/message.proto\x12\vim.logic.v1\x1a\x18im_logic/v1/common.proto\"\xc2\x01\n" +
	"\x12SendMessageRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12'\n" +
	"\x0fconversation_id\x18\x02 \x01(\tR\x0econversationId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12,\n" +
	"\x04type\x18\x04 \x01(\x0e2\x18.im.logic.v1.MessageTypeR\x04type\x12\"\n" +
	"\rclient_msg_id\x18\x05 \x01(\tR\vclientMsgId\"i\n" +
	"\x13SendMessageResponse\x12.\n" +
	"\amessage\x18\x01 \x01(\v2\x14.im.logic.v1.MessageR\amessage\x12\"\n" +
	"\rclient_msg_id\x18\x02 \x01(\tR\vclientMsgId2b\n" +
	"\x0eMessageService\x12P\n" +
	"\vSendMessage\x12\x1f.im.logic.v1.SendMessageRequest\x1a .im.logic.v1.SendMessageResponseB9Z7github.com/ceyewan/gochat/api/proto/im_logic/v1;logicv1b\x06proto3"

var (
	file_im_logic_v1_message_proto_rawDescOnce sync.Once
	file_im_logic_v1_message_proto_rawDescData []byte
)

func file_im_logic_v1_message_proto_rawDescGZIP() []byte {
	file_im_logic_v1_message_proto_rawDescOnce.Do(func() {
		file_im_logic_v1_message_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_im_logic_v1_message_proto_rawDesc), len(file_im_logic_v1_message_proto_rawDesc)))
	})
	return file_im_logic_v1_message_proto_rawDescData
}

var file_im_logic_v1_message_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_im_logic_v1_message_proto_goTypes = []any{
	(*SendMessageRequest)(nil),  // 0: im.logic.v1.SendMessageRequest
	(*SendMessageResponse)(nil), // 1: im.logic.v1.SendMessageResponse
	(MessageType)(0),            // 2: im.logic.v1.MessageType
	(*Message)(nil),             // 3: im.logic.v1.Message
}
var file_im_logic_v1_message_proto_depIdxs = []int32{
	2, // 0: im.logic.v1.SendMessageRequest.type:type_name -> im.logic.v1.MessageType
	3, // 1: im.logic.v1.SendMessageResponse.message:type_name -> im.logic.v1.Message
	0, // 2: im.logic.v1.MessageService.SendMessage:input_type -> im.logic.v1.SendMessageRequest
	1, // 3: im.logic.v1.MessageService.SendMessage:output_type -> im.logic.v1.SendMessageResponse
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_im_logic_v1_message_proto_init() }
func file_im_logic_v1_message_proto_init() {
	if File_im_logic_v1_message_proto != nil {
		return
	}
	file_im_logic_v1_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_im_logic_v1_message_proto_rawDesc), len(file_im_logic_v1_message_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_im_logic_v1_message_proto_goTypes,
		DependencyIndexes: file_im_logic_v1_message_proto_depIdxs,
		MessageInfos:      file_im_logic_v1_message_proto_msgTypes,
	}.Build()
	File_im_logic_v1_message_proto = out.File
	file_im_logic_v1_message_proto_goTypes = nil
	file_im_logic_v1_message_proto_depIdxs = nil
}
