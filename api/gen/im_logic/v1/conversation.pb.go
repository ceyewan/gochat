// im_logic/v1/conversation.proto
// 定义 im-logic 服务的会话管理相关接口

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        (unknown)
// source: im_logic/v1/conversation.proto

package logicv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// GetConversationsRequest 获取会话列表请求
type GetConversationsRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 用户 ID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 页码（从 1 开始）
	Page int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	// 每页大小
	PageSize int32 `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// 会话类型过滤（可选）
	Type          ConversationType `protobuf:"varint,4,opt,name=type,proto3,enum=im.logic.v1.ConversationType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConversationsRequest) Reset() {
	*x = GetConversationsRequest{}
	mi := &file_im_logic_v1_conversation_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationsRequest) ProtoMessage() {}

func (x *GetConversationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_im_logic_v1_conversation_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationsRequest.ProtoReflect.Descriptor instead.
func (*GetConversationsRequest) Descriptor() ([]byte, []int) {
	return file_im_logic_v1_conversation_proto_rawDescGZIP(), []int{0}
}

func (x *GetConversationsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetConversationsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetConversationsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetConversationsRequest) GetType() ConversationType {
	if x != nil {
		return x.Type
	}
	return ConversationType_CONVERSATION_TYPE_UNSPECIFIED
}

// GetConversationsResponse 获取会话列表响应
type GetConversationsResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 会话列表
	Conversations []*Conversation `protobuf:"bytes,1,rep,name=conversations,proto3" json:"conversations,omitempty"`
	// 总数量
	Total int64 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	// 当前页码
	Page int32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	// 每页大小
	PageSize      int32 `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConversationsResponse) Reset() {
	*x = GetConversationsResponse{}
	mi := &file_im_logic_v1_conversation_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationsResponse) ProtoMessage() {}

func (x *GetConversationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_im_logic_v1_conversation_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationsResponse.ProtoReflect.Descriptor instead.
func (*GetConversationsResponse) Descriptor() ([]byte, []int) {
	return file_im_logic_v1_conversation_proto_rawDescGZIP(), []int{1}
}

func (x *GetConversationsResponse) GetConversations() []*Conversation {
	if x != nil {
		return x.Conversations
	}
	return nil
}

func (x *GetConversationsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GetConversationsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetConversationsResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// GetConversationRequest 获取会话详情请求
type GetConversationRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 用户 ID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 会话 ID
	ConversationId string `protobuf:"bytes,2,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetConversationRequest) Reset() {
	*x = GetConversationRequest{}
	mi := &file_im_logic_v1_conversation_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationRequest) ProtoMessage() {}

func (x *GetConversationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_im_logic_v1_conversation_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationRequest.ProtoReflect.Descriptor instead.
func (*GetConversationRequest) Descriptor() ([]byte, []int) {
	return file_im_logic_v1_conversation_proto_rawDescGZIP(), []int{2}
}

func (x *GetConversationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetConversationRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

// GetConversationResponse 获取会话详情响应
type GetConversationResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 会话信息
	Conversation  *Conversation `protobuf:"bytes,1,opt,name=conversation,proto3" json:"conversation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConversationResponse) Reset() {
	*x = GetConversationResponse{}
	mi := &file_im_logic_v1_conversation_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConversationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConversationResponse) ProtoMessage() {}

func (x *GetConversationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_im_logic_v1_conversation_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConversationResponse.ProtoReflect.Descriptor instead.
func (*GetConversationResponse) Descriptor() ([]byte, []int) {
	return file_im_logic_v1_conversation_proto_rawDescGZIP(), []int{3}
}

func (x *GetConversationResponse) GetConversation() *Conversation {
	if x != nil {
		return x.Conversation
	}
	return nil
}

// GetMessagesRequest 获取历史消息请求
type GetMessagesRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 用户 ID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 会话 ID
	ConversationId string `protobuf:"bytes,2,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	// 起始序列号（可选，用于分页）
	StartSeqId int64 `protobuf:"varint,3,opt,name=start_seq_id,json=startSeqId,proto3" json:"start_seq_id,omitempty"`
	// 结束序列号（可选，用于分页）
	EndSeqId int64 `protobuf:"varint,4,opt,name=end_seq_id,json=endSeqId,proto3" json:"end_seq_id,omitempty"`
	// 限制数量
	Limit int32 `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	// 排序方向（true: 升序, false: 降序）
	Ascending     bool `protobuf:"varint,6,opt,name=ascending,proto3" json:"ascending,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMessagesRequest) Reset() {
	*x = GetMessagesRequest{}
	mi := &file_im_logic_v1_conversation_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMessagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessagesRequest) ProtoMessage() {}

func (x *GetMessagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_im_logic_v1_conversation_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessagesRequest.ProtoReflect.Descriptor instead.
func (*GetMessagesRequest) Descriptor() ([]byte, []int) {
	return file_im_logic_v1_conversation_proto_rawDescGZIP(), []int{4}
}

func (x *GetMessagesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetMessagesRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *GetMessagesRequest) GetStartSeqId() int64 {
	if x != nil {
		return x.StartSeqId
	}
	return 0
}

func (x *GetMessagesRequest) GetEndSeqId() int64 {
	if x != nil {
		return x.EndSeqId
	}
	return 0
}

func (x *GetMessagesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetMessagesRequest) GetAscending() bool {
	if x != nil {
		return x.Ascending
	}
	return false
}

// GetMessagesResponse 获取历史消息响应
type GetMessagesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 消息列表
	Messages []*Message `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	// 是否还有更多消息
	HasMore bool `protobuf:"varint,2,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	// 下一页的起始序列号
	NextSeqId     int64 `protobuf:"varint,3,opt,name=next_seq_id,json=nextSeqId,proto3" json:"next_seq_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMessagesResponse) Reset() {
	*x = GetMessagesResponse{}
	mi := &file_im_logic_v1_conversation_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMessagesResponse) ProtoMessage() {}

func (x *GetMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_im_logic_v1_conversation_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMessagesResponse.ProtoReflect.Descriptor instead.
func (*GetMessagesResponse) Descriptor() ([]byte, []int) {
	return file_im_logic_v1_conversation_proto_rawDescGZIP(), []int{5}
}

func (x *GetMessagesResponse) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *GetMessagesResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

func (x *GetMessagesResponse) GetNextSeqId() int64 {
	if x != nil {
		return x.NextSeqId
	}
	return 0
}

// MarkAsReadRequest 标记已读请求
type MarkAsReadRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 用户 ID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 会话 ID
	ConversationId string `protobuf:"bytes,2,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	// 已读到的序列号
	SeqId         int64 `protobuf:"varint,3,opt,name=seq_id,json=seqId,proto3" json:"seq_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkAsReadRequest) Reset() {
	*x = MarkAsReadRequest{}
	mi := &file_im_logic_v1_conversation_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkAsReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAsReadRequest) ProtoMessage() {}

func (x *MarkAsReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_im_logic_v1_conversation_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAsReadRequest.ProtoReflect.Descriptor instead.
func (*MarkAsReadRequest) Descriptor() ([]byte, []int) {
	return file_im_logic_v1_conversation_proto_rawDescGZIP(), []int{6}
}

func (x *MarkAsReadRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MarkAsReadRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *MarkAsReadRequest) GetSeqId() int64 {
	if x != nil {
		return x.SeqId
	}
	return 0
}

// MarkAsReadResponse 标记已读响应
type MarkAsReadResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 操作是否成功
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// 更新后的未读数量
	UnreadCount   int64 `protobuf:"varint,2,opt,name=unread_count,json=unreadCount,proto3" json:"unread_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkAsReadResponse) Reset() {
	*x = MarkAsReadResponse{}
	mi := &file_im_logic_v1_conversation_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkAsReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAsReadResponse) ProtoMessage() {}

func (x *MarkAsReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_im_logic_v1_conversation_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAsReadResponse.ProtoReflect.Descriptor instead.
func (*MarkAsReadResponse) Descriptor() ([]byte, []int) {
	return file_im_logic_v1_conversation_proto_rawDescGZIP(), []int{7}
}

func (x *MarkAsReadResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *MarkAsReadResponse) GetUnreadCount() int64 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

// GetUnreadCountRequest 获取未读数请求
type GetUnreadCountRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 用户 ID
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	// 会话 ID（可选，不指定则返回所有会话的未读数）
	ConversationId string `protobuf:"bytes,2,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetUnreadCountRequest) Reset() {
	*x = GetUnreadCountRequest{}
	mi := &file_im_logic_v1_conversation_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUnreadCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnreadCountRequest) ProtoMessage() {}

func (x *GetUnreadCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_im_logic_v1_conversation_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnreadCountRequest.ProtoReflect.Descriptor instead.
func (*GetUnreadCountRequest) Descriptor() ([]byte, []int) {
	return file_im_logic_v1_conversation_proto_rawDescGZIP(), []int{8}
}

func (x *GetUnreadCountRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetUnreadCountRequest) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

// GetUnreadCountResponse 获取未读数响应
type GetUnreadCountResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 未读消息数量
	UnreadCount int64 `protobuf:"varint,1,opt,name=unread_count,json=unreadCount,proto3" json:"unread_count,omitempty"`
	// 各会话的未读数（当不指定会话 ID 时返回）
	ConversationCounts []*ConversationUnreadCount `protobuf:"bytes,2,rep,name=conversation_counts,json=conversationCounts,proto3" json:"conversation_counts,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetUnreadCountResponse) Reset() {
	*x = GetUnreadCountResponse{}
	mi := &file_im_logic_v1_conversation_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUnreadCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUnreadCountResponse) ProtoMessage() {}

func (x *GetUnreadCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_im_logic_v1_conversation_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUnreadCountResponse.ProtoReflect.Descriptor instead.
func (*GetUnreadCountResponse) Descriptor() ([]byte, []int) {
	return file_im_logic_v1_conversation_proto_rawDescGZIP(), []int{9}
}

func (x *GetUnreadCountResponse) GetUnreadCount() int64 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

func (x *GetUnreadCountResponse) GetConversationCounts() []*ConversationUnreadCount {
	if x != nil {
		return x.ConversationCounts
	}
	return nil
}

// ConversationUnreadCount 会话未读数
type ConversationUnreadCount struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 会话 ID
	ConversationId string `protobuf:"bytes,1,opt,name=conversation_id,json=conversationId,proto3" json:"conversation_id,omitempty"`
	// 未读数量
	UnreadCount   int64 `protobuf:"varint,2,opt,name=unread_count,json=unreadCount,proto3" json:"unread_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConversationUnreadCount) Reset() {
	*x = ConversationUnreadCount{}
	mi := &file_im_logic_v1_conversation_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConversationUnreadCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationUnreadCount) ProtoMessage() {}

func (x *ConversationUnreadCount) ProtoReflect() protoreflect.Message {
	mi := &file_im_logic_v1_conversation_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationUnreadCount.ProtoReflect.Descriptor instead.
func (*ConversationUnreadCount) Descriptor() ([]byte, []int) {
	return file_im_logic_v1_conversation_proto_rawDescGZIP(), []int{10}
}

func (x *ConversationUnreadCount) GetConversationId() string {
	if x != nil {
		return x.ConversationId
	}
	return ""
}

func (x *ConversationUnreadCount) GetUnreadCount() int64 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

// Conversation 会话信息
type Conversation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 会话 ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// 会话类型
	Type ConversationType `protobuf:"varint,2,opt,name=type,proto3,enum=im.logic.v1.ConversationType" json:"type,omitempty"`
	// 会话名称
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// 会话头像 URL
	AvatarUrl string `protobuf:"bytes,4,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url,omitempty"`
	// 最后一条消息
	LastMessage *Message `protobuf:"bytes,5,opt,name=last_message,json=lastMessage,proto3" json:"last_message,omitempty"`
	// 未读消息数量
	UnreadCount int64 `protobuf:"varint,6,opt,name=unread_count,json=unreadCount,proto3" json:"unread_count,omitempty"`
	// 最后更新时间（Unix 时间戳）
	UpdatedAt int64 `protobuf:"varint,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// 会话成员数量（群聊时有效）
	MemberCount int32 `protobuf:"varint,8,opt,name=member_count,json=memberCount,proto3" json:"member_count,omitempty"`
	// 用户在该会话中的角色（群聊时有效）
	UserRole      int32 `protobuf:"varint,9,opt,name=user_role,json=userRole,proto3" json:"user_role,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Conversation) Reset() {
	*x = Conversation{}
	mi := &file_im_logic_v1_conversation_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Conversation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conversation) ProtoMessage() {}

func (x *Conversation) ProtoReflect() protoreflect.Message {
	mi := &file_im_logic_v1_conversation_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conversation.ProtoReflect.Descriptor instead.
func (*Conversation) Descriptor() ([]byte, []int) {
	return file_im_logic_v1_conversation_proto_rawDescGZIP(), []int{11}
}

func (x *Conversation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Conversation) GetType() ConversationType {
	if x != nil {
		return x.Type
	}
	return ConversationType_CONVERSATION_TYPE_UNSPECIFIED
}

func (x *Conversation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Conversation) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *Conversation) GetLastMessage() *Message {
	if x != nil {
		return x.LastMessage
	}
	return nil
}

func (x *Conversation) GetUnreadCount() int64 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

func (x *Conversation) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Conversation) GetMemberCount() int32 {
	if x != nil {
		return x.MemberCount
	}
	return 0
}

func (x *Conversation) GetUserRole() int32 {
	if x != nil {
		return x.UserRole
	}
	return 0
}

var File_im_logic_v1_conversation_proto protoreflect.FileDescriptor

const file_im_logic_v1_conversation_proto_rawDesc = "" +
	"\n" +
	"\x1eim_logic/v1/conversation.proto\x12\vim.logic.v1\x1a\x18im_logic/v1/common.proto\"\x96\x01\n" +
	"\x17GetConversationsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\x121\n" +
	"\x04type\x18\x04 \x01(\x0e2\x1d.im.logic.v1.ConversationTypeR\x04type\"\xa2\x01\n" +
	"\x18GetConversationsResponse\x12?\n" +
	"\rconversations\x18\x01 \x03(\v2\x19.im.logic.v1.ConversationR\rconversations\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x03R\x05total\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize\"Z\n" +
	"\x16GetConversationRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12'\n" +
	"\x0fconversation_id\x18\x02 \x01(\tR\x0econversationId\"X\n" +
	"\x17GetConversationResponse\x12=\n" +
	"\fconversation\x18\x01 \x01(\v2\x19.im.logic.v1.ConversationR\fconversation\"\xca\x01\n" +
	"\x12GetMessagesRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12'\n" +
	"\x0fconversation_id\x18\x02 \x01(\tR\x0econversationId\x12 \n" +
	"\fstart_seq_id\x18\x03 \x01(\x03R\n" +
	"startSeqId\x12\x1c\n" +
	"\n" +
	"end_seq_id\x18\x04 \x01(\x03R\bendSeqId\x12\x14\n" +
	"\x05limit\x18\x05 \x01(\x05R\x05limit\x12\x1c\n" +
	"\tascending\x18\x06 \x01(\bR\tascending\"\x82\x01\n" +
	"\x13GetMessagesResponse\x120\n" +
	"\bmessages\x18\x01 \x03(\v2\x14.im.logic.v1.MessageR\bmessages\x12\x19\n" +
	"\bhas_more\x18\x02 \x01(\bR\ahasMore\x12\x1e\n" +
	"\vnext_seq_id\x18\x03 \x01(\x03R\tnextSeqId\"l\n" +
	"\x11MarkAsReadRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12'\n" +
	"\x0fconversation_id\x18\x02 \x01(\tR\x0econversationId\x12\x15\n" +
	"\x06seq_id\x18\x03 \x01(\x03R\x05seqId\"Q\n" +
	"\x12MarkAsReadResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12!\n" +
	"\funread_count\x18\x02 \x01(\x03R\vunreadCount\"Y\n" +
	"\x15GetUnreadCountRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12'\n" +
	"\x0fconversation_id\x18\x02 \x01(\tR\x0econversationId\"\x92\x01\n" +
	"\x16GetUnreadCountResponse\x12!\n" +
	"\funread_count\x18\x01 \x01(\x03R\vunreadCount\x12U\n" +
	"\x13conversation_counts\x18\x02 \x03(\v2$.im.logic.v1.ConversationUnreadCountR\x12conversationCounts\"e\n" +
	"\x17ConversationUnreadCount\x12'\n" +
	"\x0fconversation_id\x18\x01 \x01(\tR\x0econversationId\x12!\n" +
	"\funread_count\x18\x02 \x01(\x03R\vunreadCount\"\xbf\x02\n" +
	"\fConversation\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x121\n" +
	"\x04type\x18\x02 \x01(\x0e2\x1d.im.logic.v1.ConversationTypeR\x04type\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"avatar_url\x18\x04 \x01(\tR\tavatarUrl\x127\n" +
	"\flast_message\x18\x05 \x01(\v2\x14.im.logic.v1.MessageR\vlastMessage\x12!\n" +
	"\funread_count\x18\x06 \x01(\x03R\vunreadCount\x12\x1d\n" +
	"\n" +
	"updated_at\x18\a \x01(\x03R\tupdatedAt\x12!\n" +
	"\fmember_count\x18\b \x01(\x05R\vmemberCount\x12\x1b\n" +
	"\tuser_role\x18\t \x01(\x05R\buserRole2\xd0\x03\n" +
	"\x13ConversationService\x12_\n" +
	"\x10GetConversations\x12$.im.logic.v1.GetConversationsRequest\x1a%.im.logic.v1.GetConversationsResponse\x12\\\n" +
	"\x0fGetConversation\x12#.im.logic.v1.GetConversationRequest\x1a$.im.logic.v1.GetConversationResponse\x12P\n" +
	"\vGetMessages\x12\x1f.im.logic.v1.GetMessagesRequest\x1a .im.logic.v1.GetMessagesResponse\x12M\n" +
	"\n" +
	"MarkAsRead\x12\x1e.im.logic.v1.MarkAsReadRequest\x1a\x1f.im.logic.v1.MarkAsReadResponse\x12Y\n" +
	"\x0eGetUnreadCount\x12\".im.logic.v1.GetUnreadCountRequest\x1a#.im.logic.v1.GetUnreadCountResponseB9Z7github.com/ceyewan/gochat/api/proto/im_logic/v1;logicv1b\x06proto3"

var (
	file_im_logic_v1_conversation_proto_rawDescOnce sync.Once
	file_im_logic_v1_conversation_proto_rawDescData []byte
)

func file_im_logic_v1_conversation_proto_rawDescGZIP() []byte {
	file_im_logic_v1_conversation_proto_rawDescOnce.Do(func() {
		file_im_logic_v1_conversation_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_im_logic_v1_conversation_proto_rawDesc), len(file_im_logic_v1_conversation_proto_rawDesc)))
	})
	return file_im_logic_v1_conversation_proto_rawDescData
}

var file_im_logic_v1_conversation_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_im_logic_v1_conversation_proto_goTypes = []any{
	(*GetConversationsRequest)(nil),  // 0: im.logic.v1.GetConversationsRequest
	(*GetConversationsResponse)(nil), // 1: im.logic.v1.GetConversationsResponse
	(*GetConversationRequest)(nil),   // 2: im.logic.v1.GetConversationRequest
	(*GetConversationResponse)(nil),  // 3: im.logic.v1.GetConversationResponse
	(*GetMessagesRequest)(nil),       // 4: im.logic.v1.GetMessagesRequest
	(*GetMessagesResponse)(nil),      // 5: im.logic.v1.GetMessagesResponse
	(*MarkAsReadRequest)(nil),        // 6: im.logic.v1.MarkAsReadRequest
	(*MarkAsReadResponse)(nil),       // 7: im.logic.v1.MarkAsReadResponse
	(*GetUnreadCountRequest)(nil),    // 8: im.logic.v1.GetUnreadCountRequest
	(*GetUnreadCountResponse)(nil),   // 9: im.logic.v1.GetUnreadCountResponse
	(*ConversationUnreadCount)(nil),  // 10: im.logic.v1.ConversationUnreadCount
	(*Conversation)(nil),             // 11: im.logic.v1.Conversation
	(ConversationType)(0),            // 12: im.logic.v1.ConversationType
	(*Message)(nil),                  // 13: im.logic.v1.Message
}
var file_im_logic_v1_conversation_proto_depIdxs = []int32{
	12, // 0: im.logic.v1.GetConversationsRequest.type:type_name -> im.logic.v1.ConversationType
	11, // 1: im.logic.v1.GetConversationsResponse.conversations:type_name -> im.logic.v1.Conversation
	11, // 2: im.logic.v1.GetConversationResponse.conversation:type_name -> im.logic.v1.Conversation
	13, // 3: im.logic.v1.GetMessagesResponse.messages:type_name -> im.logic.v1.Message
	10, // 4: im.logic.v1.GetUnreadCountResponse.conversation_counts:type_name -> im.logic.v1.ConversationUnreadCount
	12, // 5: im.logic.v1.Conversation.type:type_name -> im.logic.v1.ConversationType
	13, // 6: im.logic.v1.Conversation.last_message:type_name -> im.logic.v1.Message
	0,  // 7: im.logic.v1.ConversationService.GetConversations:input_type -> im.logic.v1.GetConversationsRequest
	2,  // 8: im.logic.v1.ConversationService.GetConversation:input_type -> im.logic.v1.GetConversationRequest
	4,  // 9: im.logic.v1.ConversationService.GetMessages:input_type -> im.logic.v1.GetMessagesRequest
	6,  // 10: im.logic.v1.ConversationService.MarkAsRead:input_type -> im.logic.v1.MarkAsReadRequest
	8,  // 11: im.logic.v1.ConversationService.GetUnreadCount:input_type -> im.logic.v1.GetUnreadCountRequest
	1,  // 12: im.logic.v1.ConversationService.GetConversations:output_type -> im.logic.v1.GetConversationsResponse
	3,  // 13: im.logic.v1.ConversationService.GetConversation:output_type -> im.logic.v1.GetConversationResponse
	5,  // 14: im.logic.v1.ConversationService.GetMessages:output_type -> im.logic.v1.GetMessagesResponse
	7,  // 15: im.logic.v1.ConversationService.MarkAsRead:output_type -> im.logic.v1.MarkAsReadResponse
	9,  // 16: im.logic.v1.ConversationService.GetUnreadCount:output_type -> im.logic.v1.GetUnreadCountResponse
	12, // [12:17] is the sub-list for method output_type
	7,  // [7:12] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_im_logic_v1_conversation_proto_init() }
func file_im_logic_v1_conversation_proto_init() {
	if File_im_logic_v1_conversation_proto != nil {
		return
	}
	file_im_logic_v1_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_im_logic_v1_conversation_proto_rawDesc), len(file_im_logic_v1_conversation_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_im_logic_v1_conversation_proto_goTypes,
		DependencyIndexes: file_im_logic_v1_conversation_proto_depIdxs,
		MessageInfos:      file_im_logic_v1_conversation_proto_msgTypes,
	}.Build()
	File_im_logic_v1_conversation_proto = out.File
	file_im_logic_v1_conversation_proto_goTypes = nil
	file_im_logic_v1_conversation_proto_depIdxs = nil
}
