// common/v1/types.proto
// 定义跨服务共享的通用类型、枚举和核心实体模型
syntax = "proto3";

package common.v1;

option go_package = "github.com/ceyewan/gochat/api/gen/common/v1;commonv1";

// ===================================================================
// 核心实体模型 (Core Entity Models)
// ===================================================================

// User 核心用户模型
message User {
  // 用户 ID (e.g., "1234567890")
  string id = 1;
  // 用户名
  string username = 2;
  // 头像 URL
  string avatar_url = 3;
  // 是否为游客
  bool is_guest = 4;
  // 用户状态
  UserStatus status = 5;
  // 创建时间 (Unix apoch timestamp, in seconds)
  int64 created_at = 6;
  // 更新时间 (Unix apoch timestamp, in seconds)
  int64 updated_at = 7;
}

// Message 核心消息模型
message Message {
  // 消息 ID (e.g., "msg_12345")
  string id = 1;
  // 会话 ID
  string conversation_id = 2;
  // 发送者信息 (轻量级)
  UserInfo sender = 3;
  // 消息类型
  MessageType type = 4;
  // 消息内容 (对于富文本，可以是 JSON 字符串)
  string content = 5;
  // 会话内单调递增序列号
  int64 seq_id = 6;
  // 客户端消息 ID，用于幂等性
  string client_msg_id = 7;
  // 消息是否被删除
  bool deleted = 8;
  // 消息扩展信息 (JSON 格式)
  string extra = 9;
  // 创建时间 (Unix apoch timestamp, in seconds)
  int64 created_at = 10;
  // 更新时间 (Unix apoch timestamp, in seconds)
  int64 updated_at = 11;
}

// Conversation 核心会话模型
message Conversation {
  // 会话 ID
  string id = 1;
  // 会话类型
  ConversationType type = 2;
  // 会话名称
  string name = 3;
  // 会话头像 URL
  string avatar_url = 4;
  // 会话描述
  string description = 5;
  // 会话所有者 ID (群主)
  string owner_id = 6;
  // 成员数量
  int32 member_count = 7;
  // 最后一条消息
  Message last_message = 8;
  // 当前用户的未读消息数量
  int64 unread_count = 9;
  // 最后更新时间 (Unix apoch timestamp, in seconds)
  int64 updated_at = 10;
  // 创建时间 (Unix apoch timestamp, in seconds)
  int64 created_at = 11;
}

// ConversationMember 会话成员模型
message ConversationMember {
  // 用户信息 (轻量级)
  UserInfo user = 1;
  // 成员角色
  ConversationMemberRole role = 2;
  // 是否被禁言
  bool muted = 3;
  // 加入时间 (Unix apoch timestamp, in seconds)
  int64 joined_at = 4;
}

// OnlineStatus 用户在线状态模型
message OnlineStatus {
  // 用户 ID
  string user_id = 1;
  // 是否在线
  bool is_online = 2;
  // 所在网关 ID
  string gateway_id = 3;
  // 最后在线时间 (Unix apoch timestamp, in seconds)
  int64 last_seen = 4;
}

// ===================================================================
// 枚举定义 (Enums)
// ===================================================================

// ConversationType 会话类型
enum ConversationType {
  CONVERSATION_TYPE_UNSPECIFIED = 0;
  CONVERSATION_TYPE_SINGLE = 1;
  CONVERSATION_TYPE_GROUP = 2;
  CONVERSATION_TYPE_WORLD = 3;
}

// MessageType 消息类型
enum MessageType {
  MESSAGE_TYPE_UNSPECIFIED = 0;
  MESSAGE_TYPE_TEXT = 1;
  MESSAGE_TYPE_IMAGE = 2;
  MESSAGE_TYPE_FILE = 3;
  MESSAGE_TYPE_SYSTEM = 4;
  MESSAGE_TYPE_VOICE = 5;
  MESSAGE_TYPE_VIDEO = 6;
}

// ConversationMemberRole 会话成员角色
enum ConversationMemberRole {
  CONVERSATION_MEMBER_ROLE_UNSPECIFIED = 0;
  CONVERSATION_MEMBER_ROLE_MEMBER = 1;
  CONVERSATION_MEMBER_ROLE_ADMIN = 2;
  CONVERSATION_MEMBER_ROLE_OWNER = 3;
}

// UserStatus 用户状态
enum UserStatus {
  USER_STATUS_UNSPECIFIED = 0;
  USER_STATUS_NORMAL = 1;
  USER_STATUS_DISABLED = 2;
  USER_STATUS_DELETED = 3;
}

// ===================================================================
// 轻量级与辅助类型 (Lightweight & Helper Types)
// ===================================================================

// UserInfo 轻量级用户信息
message UserInfo {
  string id = 1;
  string username = 2;
  string avatar_url = 3;
}

// ErrorResponse 统一错误响应体
message ErrorResponse {
  // 错误码
  ErrorCode code = 1;
  // 错误消息
  string message = 2;
  // 请求追踪 ID
  string trace_id = 3;
}

// ErrorCode 统一错误码
enum ErrorCode {
  ERROR_CODE_UNSPECIFIED = 0;
  // ... (此处省略详细错误码，与原文件一致)
}

// Pagination 分页信息
message Pagination {
  // 当前页码
  int32 page = 1;
  // 每页大小
  int32 page_size = 2;
  // 总数量
  int64 total = 3;
  // 是否有更多
  bool has_more = 4;
}
